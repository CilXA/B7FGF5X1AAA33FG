local exec = identifyexecutor()
local version = "V6.6.0"
print(version, exec)

if string.match(exec, "Wave") == nil and string.match(exec, "Synapse") == nil then
    warn("[[ Exoguard V3 || Exothium.xyz ||" .. exec ..  " is not supported]]")
    return
else
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Loading script",
        Text = "% " .. exec .. " %",
        Duration = 2
    })
    print("[[ Exoguard V3 || Exothium.xyz || " .. exec .." || " .. version .. " ]]")
end
if _G.exothiumrr then
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Exothium.xyz",
        Text = "Script is loaded, therefore you cant execute it again",
        Duration = 4
    })
    return
end
function Notify(tt, tx)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = tt,
        Text = tx,
        Duration = 5
    })
end
local isfirstrun = false

_G.exothiumrr = true

local wcamera = workspace.CurrentCamera
local localplayer = game.Players.LocalPlayer
local runs = game:GetService("RunService")
local rp = game:GetService("ReplicatedStorage")
local stg = localplayer:WaitForChild("PlayerGui")
local sg = stg:FindFirstChild("Exothium.xyz") or Instance.new("ScreenGui", stg); sg.Name = "Exothium.xyz"; sg.IgnoreGuiInset = true ;sg.ResetOnSpawn = false
local uis = game:GetService("UserInputService")

local realAmmoTypes = rp:FindFirstChild("realAmmoTypes") or rp:FindFirstChild("AmmoTypes") and rp:FindFirstChild("AmmoTypes"):Clone(); if realAmmoTypes then realAmmoTypes.Name = "realAmmoTypes" end

local mouse = localplayer:GetMouse()

local markvisible = true

local aimbool = false
local aimvischeck = false
local aimbang = false
local aiminfrange = false
local aimpart = "Head"
local aimtype = "Instant Hit"
local aimfov = 150
local aimtarget = nil
local aimtargetpart = nil
local aimdynamicfov = false
local aimfovcircle = Drawing.new("Circle")
local aimtargetname = Drawing.new("Text")
local aimogfunc = require(game.ReplicatedStorage.Modules.FPS.Bullet).CreateBullet
local aimmodfunc -- will change later in script

local rapidfire = false
local multitaps = 1

local esptextcolor = Color3.fromRGB(255,255,255)
local esptable = {}
--[[ esptable template
    drawingobj = {
        primary = instance
        type = string --(highlight, name, hp, hotbar, distance, skelet)
        otype = string --(plr, bot, dead, extract, loot)
        fpart = instance --(for skelet)
        spart = instance --(for skelet)
    }      
]] 
local esptextsize = 14
local espbool = false
local espname = false
local esphp = false
local espdistance = false
local espbots = false
local esphigh = false
local espskelet = false
local espdead = false
local esphotbar = false
local esploot = false
local espexit = false
local esptextline = false
local espchamsfill = 0.5
local espchamsline = 0
local espfillcolor = Color3.fromRGB(255,255,255)
local esplinecolor = Color3.fromRGB(255,255,255)

local inventoryCheckerToggle = true
local inventoryCheckerBind = Enum.KeyCode.Backquote

local tracbool = false
local traccolor = Color3.fromRGB(255,255,255)

local crosshair = Drawing.new("Circle")

local defaultfirerate = {}

local createdThings = {}

local viewmodX = 0.20
local viewmodY = -2
local viewmodZ = -0.32

local speedbool = false
local speedboost = 1.2

local bunnyhop = false

local worldleaves = false
local worldclock = 14
local waterplatforms = Instance.new("Folder", workspace)
waterplatforms.Name = "WaterPlatforms"
local worldjesus
local worldambient = Color3.fromRGB(255,255,255)
local worldoutdoor = Color3.fromRGB(255,255,255)

local NoRecoil = false
local BulletTracer = false
local InstaReload = true
local GunDrag = false
local NoProjectileDrop = false

local valcache = {
    ["6B45"] = 16,
    ["AS Val"] = 16,
    ["ATC Key"] = 6,
    ["Airfield Key"] = 6,
    ["Altyn"] = 16,
    ["Altyn Visor"] = 8,
    ["Maska Visor"] = 8,
    ["Attak-5 60L"] = 16,
    ["Bolts"] = 1,
    ["Crane Key"] = 6,
    ["DAGR"] = 12,
    ["Duct Tape"] = 1,
    ["Fast MT"] = 10,
    ["Flare Gun"] = 20,
    ["Fueling Station Key"] = 2,
    ["Garage Key"] = 4,
    ["Hammer"] = 1,
    ["JPC"] = 10,
    ["Lighthouse Key"] = 6,
    ["M4A1"] = 12,
    ["Nails"] = 1,
    ["Nuts"] = 1,
    ["Saiga 12"] = 8,
    ["Super Glue"] = 1,
    ["Village Key"] = 2,
    ["Wrench"] = 1,
    ["SPSh-44"] = 12,
    ["R700"] = 16
}

--drawing setup--

aimfovcircle.Visible = false
aimfovcircle.Radius = aimfov
aimfovcircle.Thickness = 2
aimfovcircle.Filled = false
aimfovcircle.Transparency = 1
aimfovcircle.Color = Color3.fromRGB(255, 255, 255)
aimfovcircle.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2)
crosshair.Visible = false
crosshair.Radius = 2
crosshair.Thickness = 1
crosshair.Filled = true
crosshair.Transparency = 1
crosshair.Color = Color3.fromRGB(255, 255, 255)
crosshair.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2)
aimtargetname.Text = " "
aimtargetname.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2 + aimfov + 20) 
aimtargetname.Size = 20
aimtargetname.Color = Color3.fromRGB(255,255,255)
aimtargetname.Visible = false
aimtargetname.Center = true
aimtargetname.Outline = true

--gui setup--
local LibraryVS = loadstring(game:HttpGet('https://raw.githubusercontent.com/CilXA/B7FGF5X1AAA33FG/main/watermark'))()

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CilXA/B7FGF5X1AAA33FG/main/UI%20LIB", true))()
game.CoreGui.ewq9erdusafeuwufijnen329duewq_1.Enabled = not game.CoreGui.ewq9erdusafeuwufijnen329duewq_1.Enabled

library:ChangeWeb("Exothium.xyz")
library:ChangeGame("Project Delta")

local combat = library:AddWindow('Combat')
local player = library:AddWindow('Player')
local visual = library:AddWindow('Visuals')
local other = library:AddWindow('Misc')
local home = library:AddWindow('Settings')

local mainhome = home:AddSection('Menu')
local watermark = home:AddSection('Watermark')
local aim = combat:AddSection('Aim')
local gunmods = combat:AddSection('Gun Mods')
local camzoom = other:AddSection('Zoom')
local tarinfo = combat:AddSection('Target')
local wh = visual:AddSection('Player Visuals')
local cross = visual:AddSection('Crosshair')
local inventorychecker = other:AddSection('Inventory Checker')
local tracers = visual:AddSection('Bullet Tracers')
local camer = other:AddSection('Effects')
local viewmod = visual:AddSection('View Model')
local speedh = player:AddSection('Speed')
local antiaim = player:AddSection('Anti Aim')
local bhop = player:AddSection('Bunnyhop')
local worldh = other:AddSection('World')


mainhome:AddKeyBind('Menu Bind', Enum.KeyCode.Insert, function() 
    game.CoreGui.ewq9erdusafeuwufijnen329duewq_1.Enabled = not game.CoreGui.ewq9erdusafeuwufijnen329duewq_1.Enabled
end)

aim:AddToggle('Silent Aim', true, nil, function(v)
    aimbool = v
    if v == true then
        require(game.ReplicatedStorage.Modules.FPS.Bullet).CreateBullet = aimmodfunc
    else
        require(game.ReplicatedStorage.Modules.FPS.Bullet).CreateBullet = aimogfunc
    end
end)
aim:AddToggle('Only Visible', true, nil, function(v)
    aimvischeck = v
end)
aim:AddToggle('Dynamic FOV', true, nil, function(v)
    aimdynamicfov = v
end)
aim:AddSlider('FOV Radius', 250, 10, 150, function(c) 
    aimfov = c
end)
aim:AddDropdown('Aim Part', {'Head', 'Torso', 'Scripted'}, 'Head', function(a)
    aimpart = a
end)
aim:AddDropdown('Aim Type', {'Prediction', 'Instant Hit'}, 'Instant Hit', function(a)
    aimtype = a
end)
aim:AddSeparateBar()
aim:AddToggle('FOV Visible', true, nil, function(v)
    aimfovcircle.Visible = v
end)
aim:AddColorPallete('FOV Color', Color3.fromRGB(255, 255, 255),function(a) 
   aimfovcircle.Color = a
end)

local loadedAnim2 = nil

local function stopAnimation1()
    if loadedAnim2 then
        loadedAnim2:Stop()
        loadedAnim2:Destroy()
        loadedAnim2 = nil
    end
end

local function startAnimation1()
    local char = localplayer.Character or localplayer.CharacterAdded:Wait()
    local humanoid = char:FindFirstChildWhichIsA("Humanoid")
    if not humanoid then return end

    local anim2 = Instance.new("Animation")
    anim2.AnimationId = "rbxassetid://10214311282"
    loadedAnim2 = humanoid:LoadAnimation(anim2)
    loadedAnim2.Looped = true
    loadedAnim2:Play()
    loadedAnim2:AdjustSpeed(50)
end

local function onCharacterAdded(char)
    local humanoid = char:WaitForChild("Humanoid")
    humanoid.Died:Connect(stopAnimation1)
    
    if antiaim.toggleValue then
        startAnimation1()
    end
end

localplayer.CharacterAdded:Connect(onCharacterAdded)

antiaim:AddToggle('Anti Aim', true, nil, function(v)
    antiaim.toggleValue = v
    if v then
        startAnimation1()
    else
        stopAnimation1()
    end
end)

antiaim:AddToggle('Gnome', true, nil, function(v)
    game.ReplicatedStorage.Remotes.UpdateTilt:FireServer(v and 0/0 or 0)
end)

gunmods:AddToggle('Rapid Fire', true, nil, function(v)
    rapidfire = v
    if v == true then
        local inv = game.ReplicatedStorage.Players:FindFirstChild(localplayer.Name).Inventory
        for i,v in ipairs(inv:GetChildren()) do
            local sett = require(v.SettingsModule)
            sett.FireRate = 0.002
        end
    else
        local inv = game.ReplicatedStorage.Players:FindFirstChild(localplayer.Name).Inventory
        for i,v in ipairs(inv:GetChildren()) do
            local sett = require(v.SettingsModule)
            local toset = 0.05
            toset = 60 / v.ItemProperties.Tool:GetAttribute("FireRate")
            sett.FireRate = toset
        end
    end
end)

gunmods:AddToggle('Wallbang (broken, dont use)', true, nil, function(v)
    aiminfrange = v
end)

gunmods:AddToggle('No Recoil', true, nil, function(v)
			NoRecoil = v
			if NoRecoil and rp:FindFirstChild("AmmoTypes") then
				for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
					if v then
						v:SetAttribute("RecoilStrength", 0)
					end
				end
			elseif not NoRecoil and rp:FindFirstChild("AmmoTypes") then
				for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
					if v then
						local realAmmo = realAmmoTypes:FindFirstChild(v.Name)
						if realAmmo then
							v:SetAttribute("RecoilStrength", realAmmo:GetAttribute("RecoilStrength"))
						end
					end
				end
			end
end)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local reloadRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Reload")

gunmods:AddToggle('Insta Reload', true, nil, function(v)
    InstaReload = v
    if InstaReload then
	    while InstaReload do
	      	reloadRemote:InvokeServer()
	     	wait(0.00001)
	    end
    end
end)

gunmods:AddToggle('No Drag', true, nil, function(v)
	GunDrag = v
	if GunDrag and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				v:SetAttribute("Drag", 0)
			end
		end
	elseif not GunDrag and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				local realAmmo = realAmmoTypes:FindFirstChild(v.Name)
				if realAmmo then
					v:SetAttribute("Drag", realAmmo:GetAttribute("Drag"))
				end
	    	end
		end
	end
end)

gunmods:AddToggle('No Projectile Drop', true, nil, function(v)
	NoProjectileDrop = v
	if NoProjectileDrop and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				v:SetAttribute("ProjectileDrop", 0)
			end
		end
	elseif not NoProjectileDrop and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				local realAmmo = realAmmoTypes:FindFirstChild(v.Name)
				if realAmmo then
					v:SetAttribute("ProjectileDrop", realAmmo:GetAttribute("ProjectileDrop"))
				end
			end
		end
	end
end)

gunmods:AddToggle('Bullet Tracer', true, nil, function(v)
	BulletTracer = v
	if BulletTracer and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				v:SetAttribute("Tracer", true)
			end
		end
	elseif not BulletTracer and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				local realAmmo = realAmmoTypes:FindFirstChild(v.Name)
				if realAmmo then
					v:SetAttribute("Tracer", realAmmo:GetAttribute("Tracer"))
				end
			end
		end
	end
end)

gunmods:AddSlider('Multitaps', 5, 1, 1,function(c)
    multitaps = c
end)

tarinfo:AddToggle('Target Name', true, nil, function(v)
    aimtargetname.Visible = v
end)


wh:AddToggle('ESP Enabled', true, nil, function(v)
    espbool = v
end)
wh:AddToggle('Bots', true, nil, function(v)
    espbots = v
end)
wh:AddToggle('Name', true, nil, function(v)
    espname = v
end)
wh:AddToggle('Health', true, nil, function(v)
    esphp = v
end)
wh:AddToggle('Distance', true, nil, function(v)
    espdistance = v
end)
wh:AddToggle('Chams', true, nil, function(v)
    esphigh = v
end)
wh:AddToggle('Equipped Tool', true, nil, function(v)
    esphotbar = v
end)
wh:AddToggle('Body', true, nil, function(v)
    espdead = v
end)
wh:AddToggle('Loot', true, nil, function(v)
    esploot = v
end)
wh:AddToggle('Extract', true, nil, function(v)
    espexit = v
end)
wh:AddSlider('Text Size', 35, 1, 14, function(c) 
    esptextsize = c
end)
wh:AddToggle('Text Outline', true, nil, function(v)
    esptextline = v
end)
wh:AddSlider('Chams Outline Transparency', 1, 0, 0, function(c) 
    espchamsline = c
end)
wh:AddSlider('Chams Fill Transparency', 1, 0, 0.5, function(c) 
    espchamsfill = c
end)
wh:AddColorPallete('Text Color', Color3.fromRGB(255, 255, 255),function(a) 
    esptextcolor = a
end)
wh:AddColorPallete('Chams Outline Color', Color3.fromRGB(255, 255, 255),function(a) 
    esplinecolor = a
end)
wh:AddColorPallete('Chams Fill Color', Color3.fromRGB(255, 255, 255),function(a) 
    espfillcolor = a
end)


cross:AddToggle('Crosshair', true, nil, function(v)
    crosshair.Visible = v
end)
cross:AddColorPallete('Crosshair Color', Color3.fromRGB(255, 255, 255),function(a) 
    crosshair.Color = a
end)


tracers:AddToggle('Enabled', true, nil, function(v)
    tracbool = v
end)
tracers:AddColorPallete('Tracers Color', Color3.fromRGB(255, 255, 255),function(a) 
    traccolor.Color = Color3.fromRGB(a)
end)

camer:AddKeyBind('Freecam', Enum.KeyCode.M, function() 

end)

watermark:AddToggle('Watermark', true, nil, function(v)
    LibraryVS:SetWatermarkVisibility(v)
end)

inventorychecker:AddToggle('Inventory Checker', true, nil, function(v)
    inventoryCheckerToggle = v
end)

inventorychecker:AddKeyBind('Inventory Checker Bind', Enum.KeyCode.Backquote, function(s) 
    inventoryCheckerBind = s
end)

camer:AddToggle('No Effects', true, nil, function(v) 

local noscreeneffects = v

while noscreeneffects do task.wait(0.1)
local pg = localplayer.PlayerGui
	if pg and pg:FindFirstChild("MainGui") and pg.MainGui:FindFirstChild("MainFrame") and pg.MainGui.MainFrame:FindFirstChild("ScreenEffects") then
		for i,v in ipairs(localplayer.PlayerGui.MainGui.MainFrame.ScreenEffects:GetChildren()) do
			if v:IsA("Frame") then
				v.Visible = false
			end
		end
	end
end

end)

local classicfov = 100
local zoomfov = 5

camzoom:AddSlider('Base FOV', 100, 5, 100, function(c) 
    classicfov = c
end)

camzoom:AddSlider('Zoom FOV', 80, 5, 5, function(c) 
    zoomfov = c
end)

local zoombind = Enum.KeyCode.C

camzoom:AddKeyBind('Zoom Bind', Enum.KeyCode.C, function(g)
    zoombind = g
	local ic3Connect
	ic3Connect = uis.InputEnded:Connect(function(input, _)
		if input.KeyCode == zoombind then
			ic3Connect:Disconnect()
			if rp.Players and rp.Players:FindFirstChild(localplayer.Name) and rp.Players:FindFirstChild(localplayer.Name).Settings then
				local settings = rp.Players:FindFirstChild(localplayer.Name).Settings
				settings.GameplaySettings:SetAttribute("DefaultFOV", classicfov)
			end
		end
	end)
	if rp.Players and rp.Players:FindFirstChild(localplayer.Name) and rp.Players:FindFirstChild(localplayer.Name).Settings then
		local settings = rp.Players:FindFirstChild(localplayer.Name).Settings
		settings.GameplaySettings:SetAttribute("DefaultFOV", zoomfov)
	end
end)


camer:AddToggle('No Visor', true, nil, function(v)
    if v == true then
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.HelmetMask.TitanShield.Size = UDim2.new(0,0,1,0)
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Mask.GP5.Size = UDim2.new(0,0,1,0)
        for i,v in ipairs(game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Visor:GetChildren()) do
            v.Size = UDim2.new(0,0,1,0)
        end
    else
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.HelmetMask.TitanShield.Size = UDim2.new(1,0,1,0)
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Mask.GP5.Size = UDim2.new(1,0,1,0)
        for i,v in ipairs(game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Visor:GetChildren()) do
            v.Size = UDim2.new(1,0,1,0)
        end
    end
end)
camer:AddToggle('No Flashbang', true, nil, function(v)
    if v == true then
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Flashbang.Size = UDim2.new(0,0,1,0)
    else
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Flashbang.Size = UDim2.new(1,0,1,0)
    end
end)
camer:AddButton('Third Person',function() 
    game:GetService("Players").LocalPlayer.CameraMaxZoomDistance = 99999
    game:GetService("Players").LocalPlayer.CameraMode = Enum.CameraMode.Classic
end)


viewmod:AddSlider('Offset X', 5, -5, 0.20, function(c) 
    viewmodX = c
end)
viewmod:AddSlider('Offset Y', 5, -5, -2, function(c) 
    viewmodY = c
end)
viewmod:AddSlider('Offset Z', 5, -5, -0.32, function(c) 
    viewmodZ = c
end)


speedh:AddToggle('Enabled', true, nil, function(v)
    speedbool = v
    startspeedhack()
end)
speedh:AddSlider('Speed Slider', 1.5, 0, 1.2, function(c) 
    speedboost = c
end)
bhop:AddToggle('Enabled', true, nil, function(v)
    bunnyhop = v
    repeat
        if localplayer.Character and localplayer.Character:FindFirstChildWhichIsA("Humanoid") then
            localplayer.Character.Humanoid:SetAttribute("JumpCooldown", 0)
        end
        task.wait()
    until not bunnyhop
end)



worldh:AddToggle('No Grass', true, nil, function(v)
    sethiddenproperty(workspace.Terrain, "Decoration", not v)
end)
worldh:AddToggle('No Leaves', true, nil, function(v)
    worldleaves = v
end)
worldh:AddToggle('Jesus', true, nil, function(v)
    worldjesus = v
    if v then
        while worldjesus do
            wait()
            local hitPart = workspace:Raycast(localplayer.Character:FindFirstChild("HumanoidRootPart").Position, Vector3.new(0, -5, 0) + localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 5, RaycastParams.new())
            if hitPart and hitPart.Material == Enum.Material.Water then
                local clone = Instance.new("Part")
                clone.Parent = waterplatforms
                clone.Position = hitPart.Position
                clone.Anchored = true
                clone.CanCollide = true
                clone.Size = Vector3.new(10,0.2,10)
                clone.Transparency = 1 --original = https://devforum.roblox.com/t/how-do-i-make-water-walking-passive-like-this/1589924/10
            end
        end
    else
        for i,v in ipairs(waterplatforms:GetChildren()) do
            v:Destroy()
        end
    end
end)
worldh:AddButton('World Optimization',function() 

end)

worldh:AddSlider('Clock Time', 24, 0, 14, function(c) 
    worldclock = c
    game.Lighting.ClockTime = c
end)
worldh:AddColorPallete('Ambient Color', Color3.fromRGB(255, 255, 255),function(a) 
    worldambient = a
    game.Lighting.Ambient = worldambient
end)
worldh:AddColorPallete('Outdoor Ambient Color', Color3.fromRGB(255, 255, 255),function(a) 
    worldoutdoor = a
    game.Lighting.OutdoorAmbientAmbient = worldoutdoor
end)

--gui setup end--




--tracers--

local function runtracer(start, endp)
    local beam = Instance.new("Beam")
    beam.Name = "LineBeam"
    beam.Parent = game.Workspace
    local startpart = Instance.new("Part")
    startpart.CanCollide = false
    startpart.CanQuery = false
    startpart.Transparency = 1
    startpart.Position = start
    startpart.Parent = workspace
    startpart.Anchored = true
    startpart.Size = Vector3.new(0.01, 0.01, 0.01)
    local endpart = Instance.new("Part")
    endpart.CanCollide = false
    endpart.CanQuery = false
    endpart.Transparency = 1
    endpart.Position = endp
    endpart.Parent = workspace
    endpart.Anchored = true
    endpart.Size = Vector3.new(0.01, 0.01, 0.01)
    beam.Attachment0 = Instance.new("Attachment", startpart)
    beam.Attachment1 = Instance.new("Attachment", endpart)
    beam.Color = ColorSequence.new(traccolor,  traccolor)
    beam.Width0 = 0.05
    beam.Width1 = 0.05
    beam.FaceCamera = true
    beam.Transparency = NumberSequence.new(0)
    beam.LightEmission = 1

    wait(2)

    beam:Destroy()
    startpart:Destroy()
    endpart:Destroy()
end

--silent aim--

local function isonscreen(object)
    local p, bool = wcamera:WorldToScreenPoint(object.Position)
    return bool
end
local v311 = require(game.ReplicatedStorage.Modules:WaitForChild("UniversalTables"))
local globalist11 = v311.ReturnTable("GlobalIgnoreListProjectile")
local function isvisible(char, object)
    if not localplayer.Character or not localplayer.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end

    if aimvischeck == false then
        return true
    end

    local origin = localplayer.Character.HumanoidRootPart.Position
    local pos = object.Position
    local dir = pos - origin
    local dist = dir.Magnitude + 5
    dir = dir.Unit

    local params = RaycastParams.new()
    params.IgnoreWater = true
    params.CollisionGroup = "WeaponRay"
    params.FilterDescendantsInstances = {
        localplayer.Character:GetChildren(),
        wcamera:GetChildren(),
        globalist11
    }

    local ray = workspace:Raycast(origin, dir * dist, params)
    if ray and ray.Instance:IsDescendantOf(char) then
        return true
    end

    return false
end
local function predictpos(tpart, bulletspeed, bulletdrop)
    local velocity = tpart.Velocity
    local distance = (wcamera.CFrame.Position - tpart.CFrame.Position).Magnitude
    local tth = (distance / bulletspeed)
    local predict1 = tpart.CFrame.Position + (velocity * tth)
    local delta = (predict1 - tpart.CFrame.Position).Magnitude
    local finalspeed = bulletspeed - 0.013 * bulletspeed ^ 2 * tth ^ 2
    tth += (delta / finalspeed)
    local predictres1 = tpart.CFrame.Position + (velocity * tth)
    local predictres2 = bulletdrop * tth ^ 2
    if tostring(drop_timing):find("nan") then
        predictres2 = 0
    end
    return predictres1 -- + Vector3.new(0,predictres2,0)
end
local function choosetarget()
    local cent = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2)
    local cdist = math.huge
    local ctar = nil
    local cpart = nil

    for _, pottar in ipairs(game.Players:GetPlayers()) do
        if pottar ~= localplayer and pottar.Character then
            local potroot = nil
            local head = pottar.Character:FindFirstChild("Head")
            local upperTorso = pottar.Character:FindFirstChild("UpperTorso")

            if aimpart == "Head" then
                potroot = head
            elseif aimpart == "Torso" then
                potroot = upperTorso
            elseif aimpart == "Scripted" then
                if not isvisible(pottar.Character, head) then
                    potroot = upperTorso
                else
                    potroot = head
                end
            end

            if potroot then
                local canvis = isvisible(pottar.Character, potroot)
                if canvis and isonscreen(potroot) then
                    local spoint = wcamera:WorldToViewportPoint(potroot.Position)
                    local optpoint = Vector2.new(spoint.X, spoint.Y)
                    local dist = (optpoint - cent).Magnitude

                    if aimdynamicfov then
                        if dist <= aimfovcircle.Radius and dist < cdist then
                            cdist = dist
                            ctar = pottar
                            cpart = potroot
                        end
                    else
                        if dist <= aimfov and dist < cdist then
                            cdist = dist
                            ctar = pottar
                            cpart = potroot
                        end
                    end
                end
            end
        end
    end

    if ctar == nil then
        aimtarget = nil
        aimtargetpart = nil
    else
        aimtarget = ctar
        aimtargetpart = cpart
    end
end

aimmodfunc = function(prikol, p49, p50, p_u_51, _, p52, p53, p54, p55)
    local v_u_6 = game.ReplicatedStorage.Remotes.VisualProjectile
    local v_u_108 = 0
    local v_u_106 = 0
    local v_u_7 = game.ReplicatedStorage.Remotes.FireProjectile
    local target = aimtarget
    local target_part
    local v_u_4 = require(game.ReplicatedStorage.Modules:WaitForChild("FunctionLibraryExtension"))
    local v9 = game:GetService("Players")
    local v_u_15 = v9.LocalPlayer
    local v_u_115 = v_u_4:GetEstimatedCameraPosition(v_u_15)
    local v_u_103
    local v_u_114
    local v_u_16 = game.ReplicatedStorage.Players:FindFirstChild(v_u_15.Name)
    local v_u_64 = v_u_16.Status.GameplayVariables:GetAttribute("EquipId")
    local v_u_13 = game.ReplicatedStorage:WaitForChild("VFX")
    local v_u_2 = require(game.ReplicatedStorage.Modules:WaitForChild("VFX"))
    local v3 = require(game.ReplicatedStorage.Modules:WaitForChild("UniversalTables"))
    local v_u_5 = game.ReplicatedStorage.Remotes.ProjectileInflict
    local v_u_10 = game:GetService("ReplicatedStorage")
    local v_u_12 = v_u_10:WaitForChild("RangedWeapons")
    local v_u_17 = game.ReplicatedStorage.Temp
    local v9 = game:GetService("Players")
    local v_u_56 = v_u_15.Character
    local v135 = 500000
    local v_u_18 = v3.ReturnTable("GlobalIgnoreListProjectile")
    local v_u_115 = v_u_4:GetEstimatedCameraPosition(v_u_15)
    local v65 = v_u_10.AmmoTypes:FindFirstChild(p52)
    local v_u_74 = v65:GetAttribute("Pellets")

    if target ~= nil and aimtargetpart ~= nil then
        target_part = aimtargetpart
        if aimtype == "Prediction" then
            local buldrop = v65:GetAttribute("ProjectileDrop")
            local bulsp = v65:GetAttribute("MuzzleVelocity")
            target_part = predictpos(target_part, bulsp, buldrop)
            v_u_103 = CFrame.new(v_u_115, target_part).LookVector
        else
            v_u_103 = CFrame.new(v_u_115, target_part.Position).LookVector
        end
        v_u_114 = v_u_103
    else
        target_part = p55
        v_u_103 = CFrame.new(v_u_115, v_u_15:GetMouse().Hit.Position).LookVector
        v_u_114 = v_u_103
    end

    local v60 = p50.ItemRoot
    local v61 = p49.ItemProperties
    local v62 = v_u_12:FindFirstChild(p49.Name)
    local v63 = v61:FindFirstChild("SpecialProperties")
    local v_u_66 = v63 and v63:GetAttribute("TracerColor") or v62:GetAttribute("ProjectileColor")
    local itemprop = require(v_u_16.Inventory:FindFirstChild(p49.Name).SettingsModule)
    local v79 = {
        ["x"] = {
            ["Value"] = 0
        },
        ["y"] = {
            ["Value"] = 0
        }
    }

    if v_u_56:FindFirstChild(p49.Name) then
        local v83 = 0.001 
        local v82 = 0.001
        local v81 = 10000
        if v61.Tool:GetAttribute("MuzzleDevice") or "Default" == "Suppressor" then
            if tick() - p53 < 0.8 then
                v_u_4:PlaySoundV2(v60.FireSoundSupressed, v60.FireSoundSupressed.TimeLength, v_u_17)
            else
                v_u_4:PlaySoundV2(v60.FireSoundSupressed, v60.FireSoundSupressed.TimeLength, v_u_17)
            end
        elseif tick() - p53 < 0.8 then
            v_u_4:PlaySoundV2(v60.FireSound, v60.FireSound.TimeLength, v_u_17)
        else
            v_u_4:PlaySoundV2(v60.FireSound, v60.FireSound.TimeLength, v_u_17)
        end
        local v_u_59
        if p_u_51.Item.Attachments:FindFirstChild("Front") then
            v_u_59 = p_u_51.Item.Attachments.Front:GetChildren()[1].Barrel
            local _ = p50.Attachments.Front:GetChildren()[1].Barrel
        else
            v_u_59 = p_u_51.Item.Barrel
            local _ = p50.Barrel
        end

        function v185()
            local v_u_110 = RaycastParams.new()
            v_u_110.FilterType = Enum.RaycastFilterType.Exclude
            local v_u_111 = { v_u_56, p_u_51, v_u_18 }
            v_u_110.FilterDescendantsInstances = v_u_111
            v_u_110.CollisionGroup = "WeaponRay"
            v_u_110.IgnoreWater = true

            if aiminfrange then
                v_u_110.FilterType = Enum.RaycastFilterType.Include
                v_u_110.FilterDescendantsInstances = {target_part}
            end
            
            v_u_106 += 1
            if v_u_106 == 1 then
                v_u_108 = 0
                task.spawn(function()
                    for i=1, multitaps do
                        if aimtype == "Instant Hit" then
                            if not v_u_7:InvokeServer(v_u_114, v_u_108, tick()-10) then 
                                game.ReplicatedStorage.Modules.FPS.Binds.AdjustBullets:Fire(v_u_64, 1)
                            end
                        else
                            if not v_u_7:InvokeServer(v_u_114, v_u_108, tick()) then 
                                game.ReplicatedStorage.Modules.FPS.Binds.AdjustBullets:Fire(v_u_64, 1)
                            end
                        end
                    end
                end)
            elseif 1 < v_u_106 then
                for i=1, multitaps do
                    v_u_6:FireServer(v_u_114, v_u_108)
                end
            end

            local v_u_131 = nil
            local v_u_132 = 0
            local v_u_133 = 0

            if aimtype == "Prediction" and target ~= nil then
                local bulletspeed = v65:GetAttribute("MuzzleVelocity")
                local tpart = target.Character.HumanoidRootPart
                local velocity = tpart.Velocity
                local distance = (wcamera.CFrame.Position - tpart.CFrame.Position).Magnitude
                local tth = (distance / bulletspeed)
                local predict1 = tpart.CFrame.Position + (velocity * tth)
                local delta = (predict1 - tpart.CFrame.Position).Magnitude
                local finalspeed = bulletspeed - 0.013 * bulletspeed ^ 2 * tth ^ 2
                tth += (delta / finalspeed)
                wait(tth + 0.1)
            end

            function v184(p134)
                v_u_132 = v_u_132 + p134
                if 0.008333333333333333 < v_u_132 then
                    v_u_133 = v_u_133 + v_u_132
                    local v136 = workspace:Raycast(v_u_115, v_u_114 * v135, v_u_110)
                    local v137 = nil
                    local v138 = nil
                    local v139 = nil
                    local v140
                    if v136 then
                        v137 = v136.Instance
                        v140 = v136.Position
                        v138 = v136.Normal
                        v139 = v136.Material
                    else
                        v140 = v_u_115 + v_u_114 * v135
                    end
                    task.spawn(function()
                        if tracbool == true then
                            runtracer(v60.Position, v140)
                        end
                    end)

                    if v137 == nil then
                        v_u_131:Disconnect()
                        return
                    end

                    if aiminfrange then
                        v_u_4:Penetration(v137, v140, v_u_114, 300)
                    end

                    local v175 = v137.CFrame:ToObjectSpace(CFrame.new(v140))
                    v_u_2.Impact(v137, v140, v138, v139, v_u_114, "Ranged", true)

                    v_u_5:FireServer(v137, v175, v_u_108, tick())

                    v_u_131:Disconnect()
                    return
                end
                v_u_131:Disconnect()
            end
            v_u_131 = game:GetService("RunService").RenderStepped:Connect(v184)
            return
        end
        if v_u_74 == nil then
            task.spawn(v185)
        else
            for _ = 1, v_u_74 do
                task.spawn(v185)
            end
        end

        return v83, v82, v81, v79
    end
    if not rapidfire then 
        task.wait(itemprop.FireRate)
    end
end




--esp--

local function setupesp(obj, dtype, otype1)
    local dobj
    local tableinfo
    if dtype == "Name" then
        dobj = Drawing.new("Text")
        dobj.Visible = espbool
        dobj.Center = true
        dobj.Outline = true
        dobj.Size = esptextsize
        dobj.Color = esptextcolor
        tableinfo = {
            primary = obj,
            type = "Name",
            otype = otype1
        }
    elseif dtype == "HP" then
        dobj = Drawing.new("Text")
        dobj.Visible = espbool
        dobj.Center = true
        dobj.Outline = true
        dobj.Size = esptextsize
        dobj.Color = esptextcolor
        tableinfo = {
            primary = obj,
            type = "HP",
            otype = otype1
        }
    elseif dtype == "Distance" then
        dobj = Drawing.new("Text")
        dobj.Visible = espbool
        dobj.Center = true
        dobj.Outline = true
        dobj.Size = esptextsize
        dobj.Color = esptextcolor
        tableinfo = {
            primary = obj,
            type = "Distance",
            otype = otype1
        }
    elseif dtype == "Hotbar" then
        dobj = Drawing.new("Text")
        dobj.Visible = espbool
        dobj.Center = true
        dobj.Outline = true
        dobj.Size = esptextsize
        dobj.Color = esptextcolor
        tableinfo = {
            primary = obj,
            type = "Hotbar",
            otype = otype1
        }
    elseif dtype == "Highlight" then
        dobj = Instance.new("Highlight")
        dobj.Name = math.random(111111,99992999)
        dobj.FillColor = espfillcolor
        dobj.OutlineColor = esplinecolor
        dobj.FillTransparency = espchamsfill
        dobj.OutlineTransparency = espchamsline
        dobj.Parent = obj.Parent
        dobj.Enabled = esphigh
        tableinfo = {
            primary = obj,
            type = "Highlight",
            otype = otype1
        }
    end

    if dobj == nil or tableinfo == nil then return end

    local function selfdestruct() --destroy esp object
        if dtype == "Highlight" then
            dobj.Enabled = false
            dobj:Destroy()
        else
            dobj.Visible = false
            dobj:Remove()
        end
        if removing then
            removing:Disconnect()
            removing = nil
        end
        return
    end

    if esptable[dobj] ~= nil then --if in table then cancel
        selfdestruct()
        return
    else
        esptable[dobj] = tableinfo
    end

    removing = workspace.DescendantRemoving:Connect(function(what)
        if what == obj then
            table.remove(esptable, table.find(esptable, dobj))
            selfdestruct()
        end
    end)
end
local function startesp(v, otype) --start esp for model
    task.spawn(function()
        if otype == "Extract" then
            setupesp(v, "Name", otype)
            setupesp(v, "Distance", otype)
        elseif otype == "Loot" then
            local Amount
            local TotalPrice = 0
            local Value = 0

            for _, i in ipairs(v.Parent.Inventory:GetChildren()) do
                Amount = i.ItemProperties:GetAttribute("Amount") or 1
                TotalPrice += i.ItemProperties:GetAttribute("Price") or 0
                Value += (valcache[i.ItemProperties:GetAttribute("CallSign")] or 0) * Amount
            end --original = https://rbxscript.com/post/ProjectDeltaLootEsp-P7xaS

            if Value >= 4 then
                setupesp(v, "Name", otype)
                setupesp(v, "Hotbar", otype)
                setupesp(v, "Distance", otype)
            end
        elseif otype == "Dead333" then
            local hd = v:WaitForChild("Head",1)
            if hd == nil then return end
            setupesp(hd, "Name", otype)
            setupesp(hd, "Distance", otype)
        else
            local hd = v:WaitForChild("Head",1)
            if hd == nil then return end
            setupesp(hd, "Name", otype)
            setupesp(hd, "HP", otype)
            setupesp(hd, "Distance", otype)
            setupesp(hd, "Hotbar", otype)
            setupesp(hd, "Highlight", otype) 
        end
    end)
end
for i,v in ipairs(workspace:GetDescendants()) do
    if v and v:FindFirstChild("Humanoid") and v ~= localplayer.Character then
        if game.Players:FindFirstChild(v.Name) and not v:FindFirstAncestor("DroppedItems") then
            startesp(v, "Plr")
        elseif v:FindFirstAncestor("AiZones") then
            startesp(v, "Bot333")
        elseif v:FindFirstAncestor("DroppedItems") then
            startesp(v, "Dead333")
        end
    elseif v.Parent == game.Workspace:FindFirstChild("NoCollision"):FindFirstChild("ExitLocations") then
        startesp(v, "Extract")
    elseif v:FindFirstAncestor("Containers") and v:IsA("MeshPart") then
        if v.Parent:IsA("Model") then
            startesp(v, "Loot")
        end
    end
end
workspace.DescendantAdded:Connect(function(v)
    if v and v.Parent and v:IsA("BasePart") and v.Name == "Head" then
        local hum = v.Parent:WaitForChild("Humanoid")
        if hum and v.Parent ~= localplayer.Character then
            if game.Players:FindFirstChild(v.Parent.Name) and not v:FindFirstAncestor("DroppedItems") then
                startesp(v.Parent, "Plr")
            elseif v:FindFirstAncestor("AiZones") then
                startesp(v.Parent, "Bot333")
            elseif v:FindFirstAncestor("DroppedItems") then
                startesp(v.Parent, "Dead333")
            end
        end
    elseif v.Parent == game.Workspace:FindFirstChild("NoCollision"):FindFirstChild("ExitLocations") then
        startesp(v, "Extract")
    elseif v:FindFirstAncestor("Containers") and v:IsA("MeshPart") then
        if v.Parent:IsA("Model") then
            startesp(v, "Loot")
        end
    end
end)

--speedhack--

function startspeedhack()
    local speaker = game:GetService("Players").LocalPlayer
    local chr = speaker.Character
    local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
    local hb = game:GetService("RunService").Heartbeat
    while speedbool and chr and hum and hum.Parent do
        local delta = hb:Wait()
        if hum.MoveDirection.Magnitude > 0 then
            chr:TranslateBy(hum.MoveDirection * tonumber(speedboost) * delta * 10)
        else
            chr:TranslateBy(hum.MoveDirection * delta * 10)
        end
    end
end

--fullbright--

pcall(function()
    local lighting = game:GetService("Lighting");
    lighting.Ambient = worldambient
    lighting.OutdoorAmbient = worldoutdoor
    lighting.Brightness = 1;
    lighting.FogEnd = 100000
    lighting.GlobalShadows = false
	for i,v in pairs(lighting:GetDescendants()) do
		if v:IsA("Atmosphere") then
			v:Destroy()
		end
	end
    for i, v in pairs(lighting:GetDescendants()) do
        if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("SunRaysEffect") then
            v.Enabled = false;
        end;
    end;
    lighting.Changed:Connect(function()
        lighting.Ambient = worldambient
        lighting.Brightness = 1;
        lighting.FogEnd = 100000
        lighting.OutdoorAmbient = worldoutdoor
        lighting.ClockTime = worldclock
	    for i,v in pairs(lighting:GetChildren()) do
		    if v:IsA("Atmosphere") then
			    v:Destroy()
		    end
	    end
    end);
    spawn(function()
        local character = localplayer.Character;
        while wait(0.1) do
            repeat wait(0.1) until character ~= nil;
            if not character.HumanoidRootPart:FindFirstChildWhichIsA("PointLight") then
                local headlight = Instance.new("PointLight", character.HumanoidRootPart);
                headlight.Brightness = 1;
                headlight.Range = 60;
            end;
        end;
    end);
end)

--inventory checker--

local function inventoryCheckerFrame()
	local BackgroundColor = Color3.fromRGB(30, 30, 30)
	local BorderColor = Color3.fromRGB(255, 255, 255)
	local TextColor = Color3.fromRGB(255, 255, 255)

	local MainFrame = sg:FindFirstChild("InventoryCheckerFrame") or Instance.new("Frame", sg)
	MainFrame.Name = "InventoryCheckerFrame"
	MainFrame.BackgroundColor3 = BackgroundColor
	MainFrame.BackgroundTransparency = 1
	MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	MainFrame.BorderColor3 = BorderColor
	MainFrame.BorderSizePixel = 1
	MainFrame.Position = UDim2.fromScale(0.5, 0.15)
	MainFrame.Size = UDim2.fromScale(0.575, 0.18)

	local GridHolder = Instance.new("Frame", MainFrame)
	GridHolder.Name = "GridHolder"
	GridHolder.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
	GridHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
	GridHolder.BorderSizePixel = 0
	GridHolder.Position = UDim2.new(0, 0, 0.314, 0)
	GridHolder.Size = UDim2.new(1, 0, 0.5, 0)

	local UICornerGridHolder = Instance.new("UICorner", GridHolder)
	UICornerGridHolder.CornerRadius = UDim.new(0, 0.5)

	local StrokeGridHolder = Instance.new("UIStroke", GridHolder)
	StrokeGridHolder.Thickness = 2
	StrokeGridHolder.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	StrokeGridHolder.Color = Color3.fromRGB(255, 255, 255)
	local GridHolderGradient = Instance.new("UIGradient", StrokeGridHolder)
	GridHolderGradient.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 145, 255)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 86, 161))
	}
	
	local GridHolderElement = Instance.new("UIGridLayout", GridHolder)
	GridHolderElement.Name = "GridHolderElement"
	GridHolderElement.SortOrder = Enum.SortOrder.LayoutOrder
	GridHolderElement.CellPadding = UDim2.new(0, 7, 0, 7)
	GridHolderElement.CellSize = UDim2.new(0, 51, 0, 51)

	local NameFrame = Instance.new("Frame", MainFrame)
	NameFrame.Name = "NameFrame"
	NameFrame.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
	NameFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	NameFrame.BorderSizePixel = 0
	NameFrame.Position = UDim2.new(0, 0, 0, 0)
	NameFrame.Size = UDim2.new(1, 0, 0.25, 0)

	local UICornerNameFrame = Instance.new("UICorner", NameFrame)
	UICornerNameFrame.CornerRadius = UDim.new(0, 0.5)

	local StrokeNameFrame = Instance.new("UIStroke", NameFrame)
	StrokeNameFrame.Thickness = 2
	StrokeNameFrame.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	StrokeNameFrame.Color = Color3.fromRGB(255, 255, 255)
	local NameFrameGradient = Instance.new("UIGradient", StrokeNameFrame)
	NameFrameGradient.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 145, 255)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 86, 161))
	}

	local TextLabel = Instance.new("TextLabel", NameFrame)
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.0
	TextLabel.Position = UDim2.new(0, 0, 0.169, 0)
	TextLabel.Size = UDim2.new(1, 0, 0.5, 0)
	TextLabel.Font = Enum.Font.Ubuntu
	TextLabel.Text = "N/A"
	TextLabel.TextColor3 = TextColor
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14
	TextLabel.TextStrokeTransparency = 0.7
	TextLabel.TextWrapped = true

	local TextLabelGradient = Instance.new("UIGradient", TextLabel)
	TextLabelGradient.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 145, 255)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 86, 161))
	}

	local FooterLabel = Instance.new("TextLabel", MainFrame)
	FooterLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	FooterLabel.BackgroundTransparency = 1.0
	FooterLabel.Position = UDim2.new(0, 0, 1.046, 0)
	FooterLabel.Size = UDim2.new(0, 178, 0, 17)
	FooterLabel.Font = Enum.Font.Ubuntu
	FooterLabel.Text = "Exothium.xyz"
	FooterLabel.TextColor3 = TextColor
	FooterLabel.TextSize = 14
	FooterLabel.TextStrokeTransparency = 0.7
	FooterLabel.TextXAlignment = Enum.TextXAlignment.Left

	local FooterLabelGradient = Instance.new("UIGradient", FooterLabel)
	FooterLabelGradient.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 145, 255)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 86, 161))
	}

	if not table.find(createdThings, MainFrame) then
		table.insert(createdThings, MainFrame)
	end

	return MainFrame, GridHolder, TextLabel
end

local Debounce = false
local closestDistance = math.huge
local closestPlayerTemp

local MainFrame, GridHolder, TextLabel

local function inventoryChecker()
    MainFrame, GridHolder, TextLabel = inventoryCheckerFrame()

    while inventoryCheckerToggle do
        task.wait()
        closestDistance = math.huge
        closestPlayerTemp = nil

        for _, player in ipairs(game.Players:GetPlayers()) do
            if player ~= localplayer and player.Character and player.Character.PrimaryPart then
                local part = player.Character.PrimaryPart
                local vector, onscreen = wcamera:WorldToScreenPoint(part.Position)
                local screenpoint = Vector2.new(vector.X, vector.Y)
                local mousePos = Vector2.new(mouse.X, mouse.Y)
                local distance = (screenpoint - mousePos).Magnitude

                if onscreen and distance < aimfov and distance < closestDistance then
                    closestDistance = distance
                    closestPlayerTemp = player
                end
            end
        end

        if closestPlayerTemp then
            if not Debounce then
                MainFrame.Visible = true
                Debounce = true

                if rp:FindFirstChild("Players") and rp.Players:FindFirstChild(closestPlayerTemp.Name) then
                    for _, f in ipairs(rp.Players[closestPlayerTemp.Name]:GetChildren()) do
                        if f:IsA("Folder") and f.Name ~= "Vault" then
                            for i, v in ipairs(f:GetChildren()) do
                                if v:FindFirstChild("ItemProperties") and v.ItemProperties:FindFirstChild("ItemIcon") and not GridHolder:FindFirstChild(v.Name .. i) then
                                    local imgLabel = Instance.new("ImageLabel", GridHolder)
                                    imgLabel.Name = v.Name .. i
                                    imgLabel.BackgroundTransparency = 1
                                    imgLabel.Image = v.ItemProperties.ItemIcon.Image
                                    TextLabel.Text = closestPlayerTemp.Name
                                end
                            end
                        end
                    end
                end
            end
        else
            MainFrame.Visible = false
            Debounce = false

            for _, img in pairs(GridHolder:GetChildren()) do
                if img:IsA("ImageLabel") then
                    img:Destroy()
                end
            end
        end
    end
end

local function onInventoryCheckerPressed(input)
    if input.KeyCode == inventoryCheckerBind then
        inventoryChecker()
    end
end

local function onInventoryCheckerReleased(input)
    if input.KeyCode == inventoryCheckerBind then
        MainFrame.Visible = false
    end
end

uis.InputBegan:Connect(onInventoryCheckerPressed)
uis.InputEnded:Connect(onInventoryCheckerReleased)

--camera--



--global cycle--

spawn(function()
    while wait(1) do
        if workspace:FindFirstChild("SpawnerZones") then
            for i,v in ipairs(workspace.SpawnerZones.Foliage:GetDescendants()) do
                if v:FindFirstChildOfClass("SurfaceAppearance") then
                    if worldleaves then
                        v.Transparency = 1
                    else
                        v.Transparency = 0
                    end
                end
            end
        end
        
        do
            local x, y, z = viewmodX, viewmodY, viewmodZ
            if not x or not y or not z then return end
            local offset = CFrame.new(Vector3.new(tonumber(x), tonumber(y), tonumber(z)))
            if not offset then return end
            local inv = game.ReplicatedStorage.Players:FindFirstChild(localplayer.Name).Inventory
            for i,v in ipairs(inv:GetChildren()) do
                local sett = require(v.SettingsModule)
                sett.weaponOffSet = offset
            end
        do
            if rapidfire == true then
                local inv = game.ReplicatedStorage.Players:FindFirstChild(localplayer.Name).Inventory
                for i,v in ipairs(inv:GetChildren()) do
                    local sett = require(v.SettingsModule)
                    sett.FireRate = 0.002
                end
            end
        end
        end
    end
end)


runs.RenderStepped:Connect(function() --  fast
    runs.RenderStepped:Wait()

if aimtarget ~= nil then
    local character = aimtarget.Character
    local humanoid = character and character:FindFirstChildOfClass("Humanoid")
    
    if humanoid then
        local health = humanoid.Health
        local camera = workspace.CurrentCamera
        local screenPos, onScreen = camera:WorldToScreenPoint(character.PrimaryPart.Position)

        aimtargetname.Text = string.format(
            "[[ %s | Health: %d ]]",
            aimtarget.Name, math.floor(health)
        )

        aimtargetname.Position = Vector2.new(screenPos.X, screenPos.Y)
    else
        aimtargetname.Text = "[[ ".. aimtarget.Name .." | Health: N/A ]]"
    end
else
    aimtargetname.Text = " "
end


--[[
    if aimtarget ~= nil then --on screen stuff
        aimtargetname.Text = " ".. aimtarget.Name .." "
    else
        aimtargetname.Text = " "
    end
    ]]
    aimtargetname.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2 + aimfov + 20) 
    aimfovcircle.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2)
    crosshair.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2)

    if aimdynamicfov then
        aimfovcircle.Radius = aimfov * (90 / wcamera.FieldOfView )
    else
        aimfovcircle.Radius = aimfov
    end

    choosetarget() -- aim part

    for dobj, info in esptable do --esp part
        local dtype = info.type
        local otype = info.otype
        
        if info.primary == nil or info.primary.Parent == nil then
            table.remove(esptable, table.find(esptable, dobj))
            if dtype == "Highlight" then
                dobj.Enabled = false
                dobj:Destroy()
            else
                dobj.Visible = false
                dobj:Remove()
            end
            continue
        end

        local obj
        local isHumanoid
        if otype == "Extract" then
            obj = info.primary
            isHumanoid = true
        elseif otype == "Loot" then
            obj = info.primary
            isHumanoid = true
        else
            obj = info.primary.Parent:FindFirstChild("UpperTorso")
            if not obj then
                table.remove(esptable, table.find(esptable, dobj))
                if dtype == "Highlight" then
                    dobj.Enabled = false
                    dobj:Destroy()
                else
                    dobj.Visible = false
                    dobj:Remove()
                end
                continue
            end
            isHumanoid = obj.Parent:FindFirstChild("Humanoid")
        end

        if (otype == "Bot333" and espbots == false) or (otype == "Dead333" and espdead == false) or (otype == "Extract" and espexit == false) or (otype == "Loot" and esploot == false) then
            if dtype == "Highlight" then
                dobj.Enabled = false
            else
                dobj.Visible = false
            end
            continue
        end

        if localplayer.Character == nil or localplayer.Character.PrimaryPart == nil then
            if dtype == "Highlight" then
                dobj.Enabled = false
            else
                dobj.Visible = false
            end
            continue
        end
        
        if otype == "Bot333" and obj.Parent.Humanoid.Health == 0 then
            info.otype = "Dead333"
        end

        if espbool and isonscreen(obj) and isHumanoid then
            local headpos = wcamera:WorldToViewportPoint(obj.Position)
            local resultpos = Vector2.new(headpos.X, headpos.Y)
    
            if dtype == "Name" then
                if espname then
                    resultpos = resultpos - Vector2.new(0, 15)
                    if otype == "Extract" then
                        dobj.Text = obj.Name
                    else
                        dobj.Text = obj.Parent.Name
                    end
                    dobj.Position = resultpos
                    dobj.Size = esptextsize
                    dobj.Color = esptextcolor
                    dobj.Outline = esptextline
                    dobj.Visible = true
                else
                    dobj.Visible = false
                end
            elseif dtype == "HP" then

                if otype == "Dead333" then
                    dobj.Visible = false
                    continue
                end

                resultpos = resultpos - Vector2.new(0, 30)
                dobj.Text = math.floor(obj.Parent.Humanoid.Health) .. "HP"
                dobj.Position = resultpos
                dobj.Size = esptextsize
                dobj.Color = esptextcolor
                dobj.Visible = esphp
                dobj.Outline = esptextline
            elseif dtype == "Distance" then
                if espdistance then
                    resultpos = resultpos - Vector2.new(0, 45)
                    dobj.Text = math.floor((localplayer.Character.PrimaryPart.Position - obj.Position).Magnitude * 0.333) .. "m"
                    dobj.Position = resultpos
                    dobj.Size = esptextsize
                    dobj.Color = esptextcolor
                    dobj.Outline = esptextline
                    dobj.Visible = true
                else
                    dobj.Visible = false
                end
            elseif dtype == "Hotbar" then

                if otype == "Dead333" then
                    dobj.Visible = false
                    continue
                end

                resultpos = resultpos + Vector2.new(0, 15)
                local hotgun = "None"
                for _, v in ipairs(obj.Parent:GetChildren()) do
                    if v:FindFirstChild("ItemRoot") then
                        hotgun = v.Name
                        break
                    end
                end

                dobj.Visible = esphotbar
                if otype == "Loot" then
                    local Amount
                    local TotalPrice = 0
                    local Value = 0

                    for _, h in ipairs(obj.Parent.Inventory:GetChildren()) do
                        Amount = h.ItemProperties:GetAttribute("Amount") or 1
                        TotalPrice += h.ItemProperties:GetAttribute("Price") or 0
                        Value += (valcache[h.ItemProperties:GetAttribute("CallSign")] or 0) * Amount
                    end --original = https://rbxscript.com/post/ProjectDeltaLootEsp-P7xaS

                    if Value >= 20 then
                        dobj.Text = "Rate: $$$$ || " .. TotalPrice .. "$"
                    elseif Value >= 12 then
                        dobj.Text = "Rate: $$$ || " .. TotalPrice .. "$"
                    elseif Value >= 8 then
                        dobj.Text = "Rate: $$ || " .. TotalPrice .. "$"
                    elseif Value >= 4 then
                        dobj.Text = "Rate: $ || " .. TotalPrice .. "$"
                    end
                else
                    dobj.Text = hotgun
                end
                dobj.Position = resultpos
                dobj.Size = esptextsize
                dobj.Outline = esptextline
                dobj.Color = esptextcolor
            elseif dtype == "Highlight" then

                if otype == "Dead333" then
                    dobj.Visible = false
                    continue
                end

                dobj.FillColor = espfillcolor
                dobj.OutlineColor = esplinecolor
                dobj.FillTransparency = espchamsfill
                dobj.OutlineTransparency = espchamsline
                dobj.Enabled = esphigh
            end
        else
            if dtype == "Highlight" then
                dobj.Enabled = false
            else
                dobj.Visible = false
            end
        end
    end
end)

local FrameTimer = tick()
local FrameCounter = 0;
local FPS = 60;

local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    FrameCounter += 1;

    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter;
        FrameTimer = tick();
        FrameCounter = 0;
    end;

    LibraryVS:SetWatermark(('Exothium.xyz | %s fps | %s ms'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ));
end);

Notify("Exothium.xyz", "Script loaded")
game.CoreGui.ewq9erdusafeuwufijnen329duewq_1.Enabled = not game.CoreGui.ewq9erdusafeuwufijnen329duewq_1.Enabled
