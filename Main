local exec = identifyexecutor()
local version = "V0.0.3c"

local notificationOffset = 45
local notifications = {}
local detectedAdmins = {}

function Notify(tt, tx, duration, rounding, strokeColor1, strokeColor2, darkerStroke1, darkerStroke2, fillColor, textColor)
    duration = duration or 5
    rounding = rounding or 5
    strokeColor1 = strokeColor1 or Color3.fromRGB(77, 210, 255)
    strokeColor2 = strokeColor2 or Color3.fromRGB(66, 180, 245)
    darkerStroke1 = darkerStroke1 or Color3.fromRGB(66, 180, 245)
    darkerStroke2 = darkerStroke2 or Color3.fromRGB(55, 170, 235)
    fillColor = fillColor or Color3.fromRGB(3, 3, 3)
    textColor = textColor or Color3.new(1, 1, 1)

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "_3247968012979470"
    screenGui.Parent = game:GetService("CoreGui")
    screenGui.ResetOnSpawn = false

    local yPos = #notifications * notificationOffset + 10

    local frame = Instance.new("Frame")
    frame.Parent = screenGui
    frame.Size = UDim2.new(0, 300, 0, 40)
    frame.Position = UDim2.new(0, 10, 0, yPos)
    frame.AnchorPoint = Vector2.new(0, 0)
    frame.BackgroundColor3 = fillColor
    frame.BackgroundTransparency = 0.4
    frame.BorderSizePixel = 0

    table.insert(notifications, frame)

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, rounding)
    uiCorner.Parent = frame

    local uiStroke = Instance.new("UIStroke")
    uiStroke.Parent = frame
    uiStroke.Thickness = 1.1
    uiStroke.Color = strokeColor1

    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, strokeColor1),
        ColorSequenceKeypoint.new(1, strokeColor2)
    })
    gradient.Rotation = 0
    gradient.Parent = uiStroke

    local tweenService = game:GetService("TweenService")
    local rotateTween = tweenService:Create(gradient, TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, -1), {Rotation = 360})
    rotateTween:Play()

    local title = Instance.new("TextLabel")
    title.Parent = frame
    title.Text = tt
    title.Font = Enum.Font.SourceSansBold
    title.TextSize = 18
    title.Size = UDim2.new(1, 0, 0.5, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = textColor

    local body = Instance.new("TextLabel")
    body.Parent = frame
    body.Text = tx
    body.Font = Enum.Font.SourceSans
    body.TextSize = 14
    body.Size = UDim2.new(1, 0, 0.5, 0)
    body.Position = UDim2.new(0, 0, 0.5, 0)
    body.BackgroundTransparency = 1
    body.TextColor3 = textColor

    local progressBar = Instance.new("Frame")
    progressBar.Parent = frame
    progressBar.Size = UDim2.new(1, -4, 0.02, 0)
    progressBar.Position = UDim2.new(0, 2, 1, -3)
    progressBar.BackgroundTransparency = 0
    progressBar.BorderSizePixel = 0

    local progressGradient = Instance.new("UIGradient")
    progressGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, darkerStroke1),
        ColorSequenceKeypoint.new(1, darkerStroke2)
    })
    progressGradient.Rotation = 0
    progressGradient.Parent = progressBar

    local progressCorner = Instance.new("UICorner")
    progressCorner.CornerRadius = UDim.new(0, rounding)
    progressCorner.Parent = progressBar

    local fadeInTween = tweenService:Create(frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0})
    local titleFadeInTween = tweenService:Create(title, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0})
    local bodyFadeInTween = tweenService:Create(body, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0})

    fadeInTween:Play()
    titleFadeInTween:Play()
    bodyFadeInTween:Play()

    local progressTween = tweenService:Create(progressBar, TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0.02, 0)})
    progressTween:Play()

    local function fadeOut()
        local fadeOutTween = tweenService:Create(frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {BackgroundTransparency = 1})
        fadeOutTween:Play()
        fadeOutTween.Completed:Connect(function()
            frame:Destroy()
            table.remove(notifications, table.find(notifications, frame))
            UpdateNotificationPositions()
        end)
    end

    task.delay(duration, fadeOut)
end

function UpdateNotificationPositions()
    for i, notification in ipairs(notifications) do
        local targetYPos = (i - 1) * notificationOffset + 10
        local tweenService = game:GetService("TweenService")
        local moveTween = tweenService:Create(notification, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0, 10, 0, targetYPos)})
        moveTween:Play()
    end
end

function getcurrentgun(plr)
    local char = plr.Character
    if not char then return nil, nil end
    local invchar = game.ReplicatedStorage.Players:FindFirstChild(game.Players.LocalPlayer.Name).Inventory
    if not invchar then return nil, nil end

    local gun = nil
    local gunname = nil
    local guninv = nil

    for _, desc in ipairs(char:GetDescendants()) do
        if desc:IsA("Model") and desc:FindFirstChild("ItemRoot") and desc:FindFirstChild("Attachments") then
            gun = desc
            gunname = desc.Name
            guninv = invchar:FindFirstChild(gunname)
        end
    end

    return gunname, gun, guninv
end
function getcurrentammo(gun)
    if gun == nil then return nil end
    local loadedfold = gun:FindFirstChild("LoadedAmmo", true)
    if not loadedfold then return nil end
    local firstammo = loadedfold["1"]
    if not firstammo then return nil end

    local ammoname = firstammo:GetAttribute("AmmoType")
    local ammo = game.ReplicatedStorage.AmmoTypes:FindFirstChild(ammoname)
    if not ammo then return nil end

    return ammo
end

if game.Players.LocalPlayer.Character == nil or not game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
    Notify("Exothium.xyz", "Character is missing, script will execute when spawned in", 5)
    
    while game.Players.LocalPlayer.Character == nil or not game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") do
        wait(0.2)
    end
end

wait(0.5)
--[[
local libraryxxt = pcall(function()
    local drawing199 = Drawing.new("Square")
    drawing199.Visible = false
    drawing199:Destroy()
end)

if libraryxxt == false then
    Notify("Exothium.xyz", "DL-F", 0.6)
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CilXA/B7FGF5X1AAA33FG/refs/heads/main/Drawing"))()
    Notify("Exothium.xyz", "DL-T", 0.3)
end
]]
if string.match(exec, "Wave") == nil and string.match(exec, "Synapse") == nil and string.match(exec, "Seliware") == nil and string.match(exec, "Nihon") == nil and string.match(exec, "AWP") == nil then
    Notify("Exothium.xyz", "".. exec .." is not supported", 10)
    return
else
    Notify("Exothium.xyz || Loading Script", " ".. exec .." ", 3.5)
    Notify("Exothium.xyz || Loading Assets", " " .. version .. " ", 4)
    print("[[ Exoguard V3 || Exothium.xyz || " .. exec .." || " .. version .. " ]]")
end
if exec == "Seliware" or exec == "Nihon" or exec == "AWP" then
    Notify("Exothium.xyz", "".. exec .." is semi-supported, script might cause errors", 7)
end
if _G.exothiumxyz then
    Notify("Exothium.xyz", "Script is already loaded, therefore you cant execute it again", 4)
    return
end

_G.exothiumxyz = true

local wcamera = workspace.CurrentCamera
local Players = game:GetService("Players")
local localplayer = game.Players.LocalPlayer
local runs = game:GetService("RunService")
local rp = game:GetService("ReplicatedStorage")
local aiZones = workspace:FindFirstChild("AiZones")
local whisperZone = aiZones and aiZones:FindFirstChild("Whisper")
local stg = localplayer:WaitForChild("PlayerGui")
local sg = stg:FindFirstChild("Exothium.xyz") or Instance.new("ScreenGui", stg); sg.Name = "Exothium.xyz"; sg.IgnoreGuiInset = true ;sg.ResetOnSpawn = false
local uis = game:GetService("UserInputService")
local realAmmoTypes = rp:FindFirstChild("realAmmoTypes") or rp:FindFirstChild("AmmoTypes") and rp:FindFirstChild("AmmoTypes"):Clone(); if realAmmoTypes then realAmmoTypes.Name = "realAmmoTypes" end
local mouse = localplayer:GetMouse()

local aimbool = false
local aimdebug1 = false
local aimdebug2 = false
local aimdebug3 = false
local aimselftrack = false
local aimbots = false
local aimvischeck = false
local aimdistcheck = false
local aimbang = true
local aimtrigger = false
local aiminfrange = false
local aimtarget = nil
local aimtargetpart = nil
local aimdynamicfov = false
local aimpart = "Head"
local aimtype = "Instant Hit"
local aimfov = 150
local aimdistance = 1500
local aimchance = 100
local aimfakewait = 0
local aimsnapline = Drawing.new("Line")
local snaplinebool = false
local aimfovcircle = Drawing.new("Circle")
local aimtargetname = Drawing.new("Text")
local aimogfunc = require(game.ReplicatedStorage.Modules.FPS.Bullet).CreateBullet
local aimmodfunc
local aimignoreparts = {}
for i,v in ipairs(workspace:GetDescendants()) do
    if v:GetAttribute("PassThrough") then
        table.insert(aimignoreparts, v)
    end
end

local selftrack_data = {}
local selftrack_update = 0

local debuglist95 = {}
local debuglistmode24 = "Blacklist"
local debuglistmode95x = false

local esptextcolor = Color3.fromRGB(77, 210, 255)
local esptable = {}
--[[ esptable template
    drawingobj = {
        primary = instance
        type = string --(highlight, name, hp, hotbar, distance, skelet)
        otype = string --(plr, bot, dead, extract, loot)
        fpart = instance --(for skelet)
        spart = instance --(for skelet)
    }      
]] 

healthtargetname = false
admintargetname = false

espbool = false
esptogglebind = Enum.KeyCode.Home
espname = false
esphp = false
espdistance = false
espbots = false
esphigh = false
espskelet = false
espdead = false
esphotbar = false
esploot = false
espexit = false
esptextline = true
esprenderdist = 1800
espchamsfill = 1
espchamsline = 0
esptextsize = 17
espfillcolor = Color3.fromRGB(77, 210, 255)
esplinecolor = Color3.fromRGB(77, 210, 255)

silentaimbind = Enum.KeyCode.H
autoshootbind = Enum.KeyCode.K

inventoryCheckerToggle = true
inventoryCheckerBind = Enum.KeyCode.Backquote

tracbool = false
tracwait = 1
traccolor = Color3.fromRGB(77, 210, 255)

tracbool = false
tracwait = 1
traccolor = Color3.fromRGB(77, 210, 255)
tracertexture = nil
local tracertextures = {
    ["None"] = nil,
    ["Neon"] = "http://www.roblox.com/asset/?id=71799812889976",
    ["Lightning"] = "http://www.roblox.com/asset/?id=77261843796788",
    ["Star"] = "http://www.roblox.com/asset/?id=75056325012653"
}

local crosshair = Drawing.new("Circle")

local defaultfirerate = {}

local createdThings = {}

local viewmod_materials = {
    ["Forcefield"] = Enum.Material.ForceField,
    ["Neon"] = Enum.Material.Neon,
    ["Plastic"] = Enum.Material.SmoothPlastic
}
viewmodbool = false
viewmodhandmat = Enum.Material.ForceField
viewmodgunmat = Enum.Material.ForceField
viewmodhandcolor = Color3.fromRGB(77, 210, 255)
viewmodguncolor = Color3.fromRGB(77, 210, 255)
viewmodX = 0.2
viewmodY = -2
viewmodZ = -0.32

viewmodhighlightchams = false

viewmodhighlightfillcolor = Color3.fromRGB(77, 210, 255)
viewmodhighlightoutlinecolor = Color3.fromRGB(77, 210, 255)

viewmodhighlightfilltransparency = 1
viewmodhighlightoutlinetransparency = 0

local speedbool = false
local speedboost = 1.2

local changerbool = false
local changergrav = 95
local changerspeed = 18
local changerheight = 2
local changerjump = 5

local charsemiflybind = Enum.KeyCode.X
local charsemifly = false
local charsemiflydist = 6
local charsemiflydistunlock = false
local charsemiflyspeed = 18
local semifly_bodyvel = nil

whisperNotificationToggle = false

bunnyhop = false

worldleaves = false
worldclock = 14

local waterplatforms = Instance.new("Folder", workspace)
waterplatforms.Name = "WaterPlatforms"
local worldjesus

local worldvisualstoggle = false
local worldambient = Color3.fromRGB(255,255,255)
local worldoutdoor = Color3.fromRGB(255,255,255)

charantiaim_underground = false

flipback = false

upangletoggle = false
upangleY = 0 -- 0.03070496954023838

xspeedspin = 0
xspinning = false -- xrot spin

yspeedspin = 0
yspinning = false -- yrot spin

zspeedspin = 0
zspinning = false -- zrot spin

xrot = 0
yrot = 0
zrot = 0

local hitsoundbool = false
local hitsoundhead = "Neverlose"
local hitsoundbody = "Gamesense"
local hitsoundlib = {
    ["Neverlose"] = "rbxassetid://8726881116",
    ["Gamesense"] = "rbxassetid://4817809188",
    ["Rust"]      = "rbxassetid://1255040462",
    ["Bubble"]    = "rbxassetid://198598793",
    ["Minecraft"] = "rbxassetid://6361963422",
    ["Among-Us"]  = "rbxassetid://7227567562",
}
local hitsoundlibUI = {}
for i,v in hitsoundlib do
    hitsoundlibUI[v] = i
end

local NoRecoil = false
local BulletTracer = false
local InstaReload = true
local GunDrag = false
local NoProjectileDrop = false
local RapidFire = false
local NoSway = false
local InstaEquip = false
local UnlockFiremodes = false
local BurstFire = 1

AntiDrown = false
AntiProjectile = true

NoFallDamage = false
transparencyToggle = false

local valcache = {
    ["6B45"] = 16,
    ["AS Val"] = 16,
    ["ATC Key"] = 6,
    ["Airfield Key"] = 6,
    ["Altyn"] = 16,
    ["Altyn Visor"] = 8,
    ["Maska Visor"] = 8,
    ["Attak-5 60L"] = 16,
    ["Bolts"] = 1,
    ["Crane Key"] = 6,
    ["DAGR"] = 12,
    ["Duct Tape"] = 1,
    ["Fast MT"] = 10,
    ["Flare Gun"] = 20,
    ["Fueling Station Key"] = 2,
    ["Garage Key"] = 4,
    ["Hammer"] = 1,
    ["JPC"] = 10,
    ["Lighthouse Key"] = 6,
    ["M4A1"] = 12,
    ["Nails"] = 1,
    ["Nuts"] = 1,
    ["Saiga 12"] = 8,
    ["Super Glue"] = 1,
    ["Village Key"] = 2,
    ["Wrench"] = 1,
    ["SPSh-44"] = 12,
    ["R700"] = 16,
    ["AKMN"] = 12,
    ["Mosin"] = 12,
    ["SVD"] = 12,
    ["7.62x39AP"] = 0.15,
    ["7.62x54AP"] = 0,15,
}

--drawing setup--

aimfovcircle.Visible = false
aimfovcircle.Radius = aimfov
aimfovcircle.Thickness = 1
aimfovcircle.Filled = false
aimfovcircle.Transparency = 1
aimfovcircle.Color = Color3.fromRGB(77, 210, 255)
aimfovcircle.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2)
crosshair.Visible = false
crosshair.Radius = 2
crosshair.Thickness = 1
crosshair.Filled = true
crosshair.Transparency = 1
crosshair.Color = Color3.fromRGB(77, 210, 255)
crosshair.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2)
aimtargetname.Text = " "
aimtargetname.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2 + aimfov + 20) 
aimtargetname.Size = 20
aimtargetname.Color = Color3.fromRGB(77, 210, 255)
aimtargetname.Visible = false
aimtargetname.Center = true
aimtargetname.Outline = true
aimsnapline.From = Vector2.new(20, 20)
aimsnapline.To = Vector2.new(50, 50)
aimsnapline.Color = Color3.fromRGB(77, 210, 255)
aimsnapline.Thickness = 1
aimsnapline.Visible = false

local somemethods = {
    "WalkSpeed",
    "JumpHeight",
    "HipHeight"
}
for _,met in somemethods do
    for i,v in getconnections(game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal(met)) do
        v:Disable()
    end
end
for i,v in getconnections(game.Players.LocalPlayer.Character.HumanoidRootPart.ChildAdded) do
    v:Disable()
end
for i,v in getconnections(game.Players.LocalPlayer.Character.ChildRemoved) do
    v:Disable()
end
for i,v in getconnections(workspace:GetPropertyChangedSignal("Gravity")) do
    v:Disable()
end

if not getrawmetatable or not setreadonly then
    warn("Error: 426 getrawmetatable is not a available function")
    return
end

local mt = getrawmetatable(game)
local oldNamecall = mt.__namecall
setreadonly(mt, false)

mt.__namecall = newcclosure(function(self, ...)
    local Method = getnamecallmethod()
    local Args = {...}

    if Method == "FireServer" and self.Name == "Drowning" and AntiDrown then
        return
    end

    if Method == "FireServer" and self.Name == "ProjectileInflict" and AntiProjectile then
        if Args[1] == game.Players.LocalPlayer.Character.HumanoidRootPart then
            return coroutine.yield()
        end
    end

    return oldNamecall(self, ...)
end)

setreadonly(mt, true)

--gui setup--
local LibraryVS = loadstring(game:HttpGet('https://raw.githubusercontent.com/CilXA/B7FGF5X1AAA33FG/main/watermark'))()

local FrameTimer = tick()
local FrameCounter = 0;
local FPS = 60;

local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    FrameCounter += 1;

    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter;
        FrameTimer = tick();
        FrameCounter = 0;
    end;

    LibraryVS:SetWatermark(('Exothium.xyz | %s fps | %s ms'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ));
end);


local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CilXA/B7FGF5X1AAA33FG/main/UI%20LIB", true))()
game.CoreGui.ewq9erdusafeuwufijnen329duewq_1.Enabled = not game.CoreGui.ewq9erdusafeuwufijnen329duewq_1.Enabled

library:ChangeWeb("Exothium.xyz")
library:ChangeGame("Project Delta")

local combat = library:AddWindow('Combat')
local player = library:AddWindow('Player')
local visual = library:AddWindow('Visuals')
local other = library:AddWindow('Misc')
local home = library:AddWindow('Settings')

local mainhome = home:AddSection('Menu')
local miscfeatures = home:AddSection('Extra Features')
local aim = combat:AddSection('Aimbot')
local gunmods = combat:AddSection('Gun Mods')
local camzoom = other:AddSection('Zoom')
local tarinfo = combat:AddSection('Target Info')
local snapline = combat:AddSection('Snapline')
local wh = visual:AddSection('Player Visuals')
local cross = visual:AddSection('Crosshair')
local inventorychecker = other:AddSection('Inventory Checker')
local tracers = visual:AddSection('Bullet Tracers')
local camer = other:AddSection('Effects')
local hitsounds = other:AddSection('Hitsounds')
local viewmod = visual:AddSection('Viewmodel')
local semifly = player:AddSection('Character Modifier')
local privatemods = player:AddSection('Player Exploits')
local plrmods = player:AddSection('Player Mods')
local worldh = visual:AddSection('World')
local keybinds = home:AddSection('Keybind List')

mainhome:AddKeyBind('Menu Bind', Enum.KeyCode.Insert, function() 
    game.CoreGui.ewq9erdusafeuwufijnen329duewq_1.Enabled = not game.CoreGui.ewq9erdusafeuwufijnen329duewq_1.Enabled
end)

hitsounds:AddToggle('Hitsound Enabled', true, nil, function(v)
    hitsoundbool = v
end)
hitsounds:AddDropdown('Headshot Sound', hitsoundlibUI, hitsoundhead, function(a)
    hitsoundhead = a

    local preview = Instance.new("Sound", workspace)
    preview.SoundId = hitsoundlib[a]
    preview:Play()
    task.wait(1)
    preview:Destroy()
end)
hitsounds:AddDropdown('Bodyhit Sound', hitsoundlibUI, hitsoundbody, function(a)
    hitsoundbody = a

    local preview = Instance.new("Sound", workspace)
    preview.SoundId = hitsoundlib[a]
    preview:Play()
    task.wait(1)
    preview:Destroy()
end)

snapline:AddToggle('Snapline', true, nil, function(v)
    snaplinebool = v
end)
snapline:AddColorPallete('Color', Color3.fromRGB(77, 210, 255),function(a) 
    aimsnapline.Color = a
end)

aim:AddToggle('Silent Aim', true, silentaimbind, function(v) 
    aimbool = v
    if v == true then
        require(game.ReplicatedStorage.Modules.FPS.Bullet).CreateBullet = aimmodfunc
    else
        require(game.ReplicatedStorage.Modules.FPS.Bullet).CreateBullet = aimogfunc
    end
end)
aim:AddToggle('Target AI', true, nil, function(v)
    aimbots = v
end)

aim:AddToggle('Wall Check', true, nil, function(v)
    aimvischeck = v
end)

aim:AddToggle('Auto Shoot', true, autoshootbind, function(v)
    aimtrigger = v
end)

aim:AddSeparateBar()

aim:AddToggle('FOV Visible', true, nil, function(v)
    aimfovcircle.Visible = v
end)
aim:AddToggle('Dynamic FOV', true, nil, function(v)
    aimdynamicfov = v
end)
aim:AddSlider('FOV Radius', 350, 10, 150, function(c) 
    aimfov = c
end)
aim:AddColorPallete('FOV Color', Color3.fromRGB(77, 210, 255),function(a) 
   aimfovcircle.Color = a
end)

aim:AddSeparateBar()

aim:AddDropdown('Hitbox', {'Head', 'Torso', 'Legs', 'Random', 'Scripted'}, 'Head', function(a)
    aimpart = a
end)
aim:AddDropdown('Method', {'Prediction', 'Instant Hit'}, 'Instant Hit', function(a)
    aimtype = a
end)

gunmods:AddToggle('Rapid Fire', true, nil, function(v)
    RapidFire = v
    if v == true then
        local inv = game.ReplicatedStorage.Players:FindFirstChild(localplayer.Name).Inventory
        for i,v in ipairs(inv:GetChildren()) do
            local sett = require(v.SettingsModule)
            sett.FireRate = 0.002
        end
    else
        local inv = game.ReplicatedStorage.Players:FindFirstChild(localplayer.Name).Inventory
        for i,v in ipairs(inv:GetChildren()) do
            local sett = require(v.SettingsModule)
            local toset = 0.05
            toset = 60 / v.ItemProperties.Tool:GetAttribute("FireRate")
            sett.FireRate = toset
        end
    end
end)
gunmods:AddToggle('Unlock Firemodes', true, nil, function(v)
    UnlockFiremodes = v
end)
gunmods:AddToggle('Instant Equip', true, nil, function(v)
    InstaEquip = v
end)
gunmods:AddToggle('Wallbang', true, nil, function(v)
    aimbang = v
end)

gunmods:AddToggle('No Recoil', true, nil, function(v)
			NoRecoil = v
			if NoRecoil and rp:FindFirstChild("AmmoTypes") then
				for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
					if v then
						v:SetAttribute("RecoilStrength", 0)
					end
				end
			elseif not NoRecoil and rp:FindFirstChild("AmmoTypes") then
				for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
					if v then
						local realAmmo = realAmmoTypes:FindFirstChild(v.Name)
						if realAmmo then
							v:SetAttribute("RecoilStrength", realAmmo:GetAttribute("RecoilStrength"))
						end
					end
				end
			end
end)

local reloadRemote = rp:WaitForChild("Remotes"):WaitForChild("Reload")

gunmods:AddToggle('Insta Reload', true, nil, function(v)
    InstaReload = v
    if InstaReload then
	    while InstaReload do
	      	reloadRemote:InvokeServer()
	     	wait(0.00001)
	    end
    end
end)

gunmods:AddToggle('No Drag', true, nil, function(v)
	GunDrag = v
	if GunDrag and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				v:SetAttribute("Drag", 0)
			end
		end
	elseif not GunDrag and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				local realAmmo = realAmmoTypes:FindFirstChild(v.Name)
				if realAmmo then
					v:SetAttribute("Drag", realAmmo:GetAttribute("Drag"))
				end
	    	end
		end
	end
end)
gunmods:AddToggle('No Sway', true, nil, function(v)
    NoSway = v
end)
gunmods:AddToggle('No Projectile Drop', true, nil, function(v)
	NoProjectileDrop = v
	if NoProjectileDrop and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				v:SetAttribute("ProjectileDrop", 0)
			end
		end
	elseif not NoProjectileDrop and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				local realAmmo = realAmmoTypes:FindFirstChild(v.Name)
				if realAmmo then
					v:SetAttribute("ProjectileDrop", realAmmo:GetAttribute("ProjectileDrop"))
				end
			end
		end
	end
end)

gunmods:AddToggle('Bullet Tracer', true, nil, function(v)
	BulletTracer = v
	if BulletTracer and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				v:SetAttribute("Tracer", true)
			end
		end
	elseif not BulletTracer and rp:FindFirstChild("AmmoTypes") then
		for i,v in ipairs(rp.AmmoTypes:GetChildren()) do
			if v then
				local realAmmo = realAmmoTypes:FindFirstChild(v.Name)
				if realAmmo then
					v:SetAttribute("Tracer", realAmmo:GetAttribute("Tracer"))
				end
			end
		end
	end
end)

gunmods:AddSlider('Burstfire', 5, 1, 1,function(c)
    BurstFire = c
end)

tarinfo:AddToggle('Target Name', true, nil, function(v)
    aimtargetname.Visible = v
end)

tarinfo:AddToggle('Health', true, nil, function(v)
    healthtargetname = v
end)

tarinfo:AddToggle('Admin', true, nil, function(v)
    admintargetname = v
end)

miscfeatures:AddToggle('Whisper Alert', true, nil, function(v)
    whisperNotificationToggle = v
    if whisperNotificationToggle and not whisperZone then
        Notify("Exothium.xyz", "Feature isnt available in lobby.", 5)
    end
end)

miscfeatures:AddButton('Reset',function() 
    game.Players.LocalPlayer.Character.Health.Drowning:FireServer(115)
end)

miscfeatures:AddButton('Quick Use',function() 
    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Consume"):FireServer()
end)

miscfeatures:AddButton('Unlock Boss',function() 
    local npc = game.Workspace.Boss
    npc:SetAttribute("Hidden", false)

    for _, part in pairs(npc:GetChildren()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            part.Transparency = 0
        end
    end
end)

miscfeatures:AddButton('Spawn UAZ',function() 
local player = game.Players.LocalPlayer
local plr = player

if not plr.Character or not plr.Character:FindFirstChildOfClass("Humanoid") then 
    return Notify("Exothium.xyz", "Error: No character", 3) 
end

local uaz, dist = nil, math.huge
for i, v in pairs(workspace:WaitForChild("Vehicles"):GetChildren()) do
    if v:FindFirstChild("Body") and v.Body:FindFirstChildOfClass("MeshPart") then
        local vehiclePos = v.Body:FindFirstChildOfClass("MeshPart").Position
        local camPos = workspace.CurrentCamera.CFrame.p
        local distance = (vehiclePos - camPos).Magnitude
        if dist > distance then
            dist = distance
            uaz = v
        end
    end
end

if not uaz then 
    return Notify("Exothium.xyz", "Error: No car found", 3) 
end

local humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
if humanoid then
    for i, v in ipairs(uaz:GetDescendants()) do
        if v:IsA('Seat') and v.Name == 'SeatFR' then
            v:Sit(humanoid)
        end
    end
end

wait(0.2)

for i = 1, 2 do
    game:GetService("ReplicatedStorage").Remotes.VehicleInteractions:FireServer({
        ["Vehicle"] = uaz,
        ["Action"] = "Enter",
        ["Door"] = uaz.Body.FRdoor.FR_Door
    })
    wait(0.2)
end

uaz.Remotes.ExitSeat:FireServer()
wait(0.1)

game:GetService("ReplicatedStorage").Remotes.VehicleInteractions:FireServer({
    ["Vehicle"] = uaz,
    ["Action"] = "Exit",
    ["Door"] = uaz.Body.FRdoor.FR_Door
})

uaz.Remotes.ExitSeat:FireServer()
wait(1)

player.Character:FindFirstChildOfClass('Humanoid'):Move(Vector3.new(0, 10, 0))
Notify("Exothium.xyz", "Spawned UAZ", 3) 
end)

semifly:AddToggle('Movement Toggle', true, charsemiflybind, function(v) 
    if localplayer.Character and localplayer.Character:FindFirstChild("HumanoidRootPart") then
        if v == false then
			semifly_bodyvel:Destroy()
		elseif v == true then
			semifly_bodyvel = Instance.new("BodyVelocity", localplayer.Character.HumanoidRootPart)
			semifly_bodyvel.Velocity = Vector3.new(0,0,0)
		end

		localplayer.Character.Humanoid.PlatformStand = not localplayer.Character.Humanoid.PlatformStand 
        charsemifly = v
    else
        charsemifly = false
    end
end)
semifly:AddSeparateBar()
semifly:AddSlider('Max Height Distance', 8, 0.1, 6, function(c) 
    charsemiflydist = c
end)

semifly:AddToggle('[!] Unlock Height Distance', true, nil, function(v) 
    charsemiflydistunlock = v
    local oldsemiflydist = charsemiflydist

    if charsemiflydistunlock then
        charsemiflydist = 1500
    else
        charsemiflydist = oldsemiflydist
    end
end)

semifly:AddSlider('Speed', 90, 1, 18, function(c) 
    charsemiflyspeed = c
end)
semifly:AddSeparateBar()

--semifly:AddToggle('Flip Character', true, nil, function(v) 
--    charantiaim_underground = v
--end)

semifly:AddToggle('Custom Rotation', true, nil, function(v) 
    charantiaim_underground = v
end)

semifly:AddToggle('UpAngle Toggle', true, nil, function(v) 
    upangletoggle = v
end)

semifly:AddSlider('UpAngle Value', 5, -5, 0, function(c) 
    upangleY = c
end)
semifly:AddSeparateBar()
semifly:AddSlider('X Rotation', 360, 0, 0, function(c) 
    xrot = c
end)
semifly:AddSlider('Y Rotation', 10, 0, 0, function(c) 
    yrot = c
end)
semifly:AddSlider('Z Rotation', 10, 0, 0, function(c) 
    zrot = c
end)

semifly:AddSeparateBar()

semifly:AddToggle('Spin X', true, nil, function(v)
    xspinning = v
    if not xspinning then
        xrot = 0
    else
        coroutine.wrap(function()
            while xspinning do
                xrot = (xrot + xspeedspin * 2) % 360
                runs.RenderStepped:Wait()
            end
        end)()
    end
end)

semifly:AddSlider('X Rotation Speed', 20, 0, 0, function(c) 
    xspeedspin = c
end)

semifly:AddToggle('Spin Y', true, nil, function(v)
    yspinning = v
    if not yspinning then
        yrot = 0
    else
        coroutine.wrap(function()
            while yspinning do
                yrot = (yrot + yspeedspin * 2) % 360
                runs.RenderStepped:Wait()
            end
        end)()
    end
end)

semifly:AddSlider('Y Rotation Speed', 20, 0, 0, function(c) 
    yspeedspin = c
end)

semifly:AddToggle('Spin Z', true, nil, function(v)
    zspinning = v
    if not zspinning then
        zrot = 0
    else
        coroutine.wrap(function()
            while zspinning do
                zrot = (zrot + zspeedspin * 2) % 360
                runs.RenderStepped:Wait()
            end
        end)()
    end
end)

semifly:AddSlider('Z Rotation Speed', 20, 0, 0, function(c) 
    zspeedspin = c
end)

--[[
hitsounds:AddDropdown('Hitsound', {"None", "Neverlose", "Gamesense", "CSGO", "Rust", "Minecraft"}, 'None', function(v)
    currenthitsound = v == "None" and "" or HitmarkerSounds[v]
end)

hitsounds:AddToggle('Enable Hitsounds', true, nil, function(v)
    hitsounds_enabled = v
end)
]]
wh:AddToggle('ESP Enabled', true, esptogglebind, function(v)
    espbool = v
end)
wh:AddToggle('Bots', true, nil, function(v)
    espbots = v
end)
wh:AddToggle('Name', true, nil, function(v)
    espname = v
end)
wh:AddToggle('Health', true, nil, function(v)
    esphp = v
end)
wh:AddToggle('Distance', true, nil, function(v)
    espdistance = v
end)
wh:AddToggle('Chams', true, nil, function(v)
    esphigh = v
end)
wh:AddToggle('Equipped Tool', true, nil, function(v)
    esphotbar = v
end)
wh:AddToggle('Body', true, nil, function(v)
    espdead = v
end)
--[[

wh:AddToggle('Loot', true, nil, function(v)
    esploot = v
end)

]]
wh:AddToggle('Extract', true, nil, function(v)
    espexit = v
end)

wh:AddSeparateBar()

wh:AddColorPallete('Text Color', Color3.fromRGB(77, 210, 255),function(a) 
    esptextcolor = a
end)
wh:AddSlider('Text Size', 35, 1, 17, function(c) 
    esptextsize = c
end)
wh:AddToggle('Text Outline', false, nil, function(v)
    esptextline = v
end)

wh:AddSeparateBar()

wh:AddSlider('Chams Outline Transparency', 1, 0, 0, function(c) 
    espchamsline = c
end)
wh:AddColorPallete('Chams Outline Color', Color3.fromRGB(77, 210, 255),function(a) 
    esplinecolor = a
end)

wh:AddSlider('Chams Fill Transparency', 1, 0, 0.5, function(c) 
    espchamsfill = c
end)
wh:AddColorPallete('Chams Fill Color', Color3.fromRGB(77, 210, 255),function(a) 
    espfillcolor = a
end)


cross:AddToggle('Crosshair', true, nil, function(v)
    crosshair.Visible = v
end)
cross:AddColorPallete('Crosshair Color', Color3.fromRGB(77, 210, 255),function(a) 
    crosshair.Color = a
end)


tracers:AddToggle('Enabled', true, nil, function(v)
    tracbool = v
end)
tracers:AddDropdown('Tracer Texture', {'None', "Neon", "Lightning", "Star"}, 'Neon', function(a)
    tracertexture = tracertextures[a]
end)
tracers:AddColorPallete('Tracers Color', Color3.fromRGB(77, 210, 255),function(a) 
    traccolor.Color = Color3.fromRGB(a)
end)
tracers:AddSlider('Tracer Lifetime', 20, 0, 1, function(c) 
    tracwait = c
end)

function isFalling()
    local humanoid = localplayer.Character and localplayer.Character:FindFirstChild("Humanoid")
    return humanoid and humanoid:GetState() == Enum.HumanoidStateType.Freefall
end

function createSafetyPart()
    local rootPart = localplayer.Character and localplayer.Character:FindFirstChild("HumanoidRootPart")
    if rootPart then
        local safetyPart = Instance.new("Part")
        safetyPart.Size = Vector3.new(4, 0.5, 4)
        safetyPart.Anchored = true
        safetyPart.CanCollide = true
        safetyPart.Transparency = transparencyToggle and 0 or 1
        safetyPart.BrickColor = BrickColor.new("Cyan")
        safetyPart.Material = Enum.Material.ForceField
        safetyPart.Position = rootPart.Position - Vector3.new(0, 4.9, 0)
        safetyPart.Parent = game.Workspace

        safetyPart.Touched:Connect(function(hit)
            if hit and hit.Parent == localplayer.Character then
                safetyPart:Destroy()
            end
        end)

        delay(0.05, function()
            if safetyPart and safetyPart.Parent then
                safetyPart:Destroy()
            end
        end)
    end
end

local function startFallProtection()
    while NoFallDamage do
        if isFalling() then
            createSafetyPart()
        end
        wait(0.1)
    end
end

plrmods:AddToggle('Bunnyhop', true, nil, function(v)
    bunnyhop = v
    repeat
        if localplayer.Character and localplayer.Character:FindFirstChildWhichIsA("Humanoid") then
            localplayer.Character.Humanoid:SetAttribute("JumpCooldown", 0)
        end
        task.wait()
    until not bunnyhop
end)

plrmods:AddSeparateBar()

plrmods:AddToggle('No Fall Damage', true, nil, function(v)
    NoFallDamage = v
    if v then
        startFallProtection()
    end
end)

plrmods:AddToggle('Visualize', true, nil, function(v)
    transparencyToggle = v
end)

plrmods:AddSeparateBar()

plrmods:AddToggle('Gnome Mode', true, nil, function(v)
    game.ReplicatedStorage.Remotes.UpdateTilt:FireServer(v and 0/0 or 0)
end)

inventorychecker:AddToggle('Inventory Checker', true, nil, function(v)
    inventoryCheckerToggle = v
end)

inventorychecker:AddKeyBind('Inventory Checker Bind', Enum.KeyCode.Backquote, function(s) 
    inventoryCheckerBind = s
end)



camer:AddToggle('No Effects', true, nil, function(v) 
local noscreeneffects = v

while noscreeneffects do task.wait(0.1)
local pg = localplayer.PlayerGui
	if pg and pg:FindFirstChild("MainGui") and pg.MainGui:FindFirstChild("MainFrame") and pg.MainGui.MainFrame:FindFirstChild("ScreenEffects") then
		for i,v in ipairs(localplayer.PlayerGui.MainGui.MainFrame.ScreenEffects:GetChildren()) do
			if v:IsA("Frame") then
				v.Visible = false
			end
		end
	end
end
end)


local finishCharacterCreation = rp:WaitForChild("Remotes"):WaitForChild("FinishCharacterCreation")

local skinColors = {"1", "2", "3", "4", "5", "6", "7", "8"}
local faces = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}
local hairColors = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"}
local hairs = {"M1", "M2", "M3", "M4", "M5", "M6", "M7", "M8", "M9", "M10", "M11", "M12"}

local toggleActive = false
local runningThread

local function fireCharacterCreation()
    for _, skinColor in ipairs(skinColors) do
        for _, face in ipairs(faces) do
            for _, hairColor in ipairs(hairColors) do
                for _, hair in ipairs(hairs) do
                    if not toggleActive then
                        return
                    end
                    
                    local args = {
                        [1] = {
                            ["SkinColor"] = skinColor,
                            ["Face"] = face,
                            ["HairColor"] = hairColor,
                            ["Hair"] = hair
                        }
                    }
                    
                    finishCharacterCreation:InvokeServer(unpack(args))
                    wait(0.01)
                end
            end
        end
    end
end

camer:AddToggle('Appearance Switcher', true, nil, function(v)
    toggleActive = v
    if toggleActive then
        runningThread = coroutine.create(fireCharacterCreation)
        coroutine.resume(runningThread)
    else
        runningThread = nil
    end
end)

local classicfov = 100
local zoomfov = 5

camzoom:AddSlider('Base FOV', 100, 5, 100, function(c) 
    classicfov = c
end)

camzoom:AddSlider('Zoom FOV', 80, 5, 5, function(c) 
    zoomfov = c
end)

local zoomtoggle = false
local zoombind = Enum.KeyCode.C

camzoom:AddKeyBind('Zoom Bind', Enum.KeyCode.C, function(g)
    zoombind = g
	local ic3Connect
	ic3Connect = uis.InputEnded:Connect(function(input, _)
		if input.KeyCode == zoombind then
			ic3Connect:Disconnect()
			if rp.Players and rp.Players:FindFirstChild(localplayer.Name) and rp.Players:FindFirstChild(localplayer.Name).Settings then
				local settings = rp.Players:FindFirstChild(localplayer.Name).Settings
                zoomtoggle = false
				settings.GameplaySettings:SetAttribute("DefaultFOV", classicfov)
			end
		end
	end)
	if rp.Players and rp.Players:FindFirstChild(localplayer.Name) and rp.Players:FindFirstChild(localplayer.Name).Settings then
		local settings = rp.Players:FindFirstChild(localplayer.Name).Settings
        zoomtoggle = true
		settings.GameplaySettings:SetAttribute("DefaultFOV", zoomfov)
	end
end)


camer:AddToggle('No Visor', true, nil, function(v)
    if v == true then
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.HelmetMask.TitanShield.Size = UDim2.new(0,0,1,0)
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Mask.GP5.Size = UDim2.new(0,0,1,0)
        for i,v in ipairs(game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Visor:GetChildren()) do
            v.Size = UDim2.new(0,0,1,0)
        end
    else
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.HelmetMask.TitanShield.Size = UDim2.new(1,0,1,0)
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Mask.GP5.Size = UDim2.new(1,0,1,0)
        for i,v in ipairs(game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Visor:GetChildren()) do
            v.Size = UDim2.new(1,0,1,0)
        end
    end
end)
camer:AddToggle('No Flashbang', true, nil, function(v)
    if v == true then
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Flashbang.Size = UDim2.new(0,0,1,0)
    else
        game.Players.LocalPlayer.PlayerGui.MainGui.MainFrame.ScreenEffects.Flashbang.Size = UDim2.new(1,0,1,0)
    end
end)

local origZoom = localplayer.CameraMaxZoomDistance
local origMode = localplayer.CameraMode

local newZoom = 99999
local newMode = Enum.CameraMode.Classic

camer:AddToggle('Third Person', true, nil, function(isToggled)
    if isToggled then
        localplayer.CameraMaxZoomDistance = newZoom
        localplayer.CameraMode = newMode
    else
        localplayer.CameraMaxZoomDistance = origZoom
        localplayer.CameraMode = origMode
    end
end)

camer:AddToggle('No Drown', true, nil, function(v)
    AntiDrown = v
    if AntiDrown then
        game.Lighting.WaterBlur.Size = 0
    else
        game.Lighting.WaterBlur.Size = 24
    end
end)

viewmod:AddToggle('Viewmodel Chams', true, nil, function(v)
    viewmodbool = v
end)
viewmod:AddDropdown('Arm Chams Material', {'Neon', 'Forcefield', "Plastic"}, 'Forcefield', function(a)
    if viewmod_materials[a] then
        viewmodhandmat = viewmod_materials[a]
    else

    end
end)
viewmod:AddDropdown('Weapon Chams Material', {'Neon', 'Forcefield', "Plastic"}, 'Forcefield', function(a)
    if viewmod_materials[a] then
        viewmodgunmat = viewmod_materials[a]
    else

    end
end)
viewmod:AddColorPallete('Arm Chams Color', Color3.fromRGB(77, 210, 255),function(a) 
    viewmodhandcolor = a
end)
viewmod:AddColorPallete('Weapon Chams Color', Color3.fromRGB(77, 210, 255),function(a) 
    viewmodguncolor = a
end)

viewmod:AddSeparateBar()

viewmod:AddToggle('Viewmodel Outline Chams', true, nil, function(v)
    viewmodhighlightchams = v
end)

viewmod:AddColorPallete('Outline Fill Color', Color3.fromRGB(77, 210, 255),function(a) 
    viewmodhighlightfillcolor = a
end)
viewmod:AddSlider('Outline Fill Transparency', 1, 0, 1, function(c) 
    viewmodhighlightfilltransparency = c
end)

viewmod:AddColorPallete('Outline Color', Color3.fromRGB(77, 210, 255),function(a) 
    viewmodhighlightoutlinecolor = a
end)
viewmod:AddSlider('Outline Transparency', 1, 0, 0, function(c) 
    viewmodhighlightoutlinetransparency = c
end)

local keybindmenuvisible = false

local KeybindListMenuD = {
	["__238237458342578523124872147"] = Instance.new("ScreenGui");
	["_Holder"] = Instance.new("Frame");
	["_KeybindIcon"] = Instance.new("ImageLabel");
	["_UIStroke"] = Instance.new("UIStroke");
	["_UICorner"] = Instance.new("UICorner");
	["_KeybindTitle"] = Instance.new("TextLabel");
	["_UIStroke1"] = Instance.new("UIStroke");
	["_UICorner1"] = Instance.new("UICorner");
	["_KeybindListMenuD"] = Instance.new("Frame");
	["_UIListLayout"] = Instance.new("UIListLayout");
	["_SilentAim"] = Instance.new("Frame");
	["_Icon"] = Instance.new("ImageLabel");
	["_Title"] = Instance.new("TextLabel");
	["_AutoShoot"] = Instance.new("Frame");
	["_Icon1"] = Instance.new("ImageLabel");
	["_Title1"] = Instance.new("TextLabel");
	["_ESPToggle"] = Instance.new("Frame");
	["_Icon2"] = Instance.new("ImageLabel");
	["_Title2"] = Instance.new("TextLabel");
	["_Zoom"] = Instance.new("Frame");
	["_Icon3"] = Instance.new("ImageLabel");
	["_Title3"] = Instance.new("TextLabel");
	["_MovementToggle"] = Instance.new("Frame");
	["_Icon4"] = Instance.new("ImageLabel");
	["_Title4"] = Instance.new("TextLabel");
}

KeybindListMenuD["__238237458342578523124872147"].Enabled = false
KeybindListMenuD["__238237458342578523124872147"].IgnoreGuiInset = true
KeybindListMenuD["__238237458342578523124872147"].ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets
KeybindListMenuD["__238237458342578523124872147"].ResetOnSpawn = false
KeybindListMenuD["__238237458342578523124872147"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
KeybindListMenuD["__238237458342578523124872147"].Name = "_238237458342578523124872147"
KeybindListMenuD["__238237458342578523124872147"].Parent = game:GetService("CoreGui")

KeybindListMenuD["_Holder"].BackgroundColor3 = Color3.fromRGB(61.00000396370888, 61.00000396370888, 61.00000396370888)
KeybindListMenuD["_Holder"].BackgroundTransparency = 1
KeybindListMenuD["_Holder"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Holder"].BorderSizePixel = 0
KeybindListMenuD["_Holder"].Position = UDim2.new(0.080824092, 0, 0.415061295, 0)
KeybindListMenuD["_Holder"].Size = UDim2.new(0, 106, 0, 17)
KeybindListMenuD["_Holder"].Name = "Holder"
KeybindListMenuD["_Holder"].Parent = KeybindListMenuD["__238237458342578523124872147"]

KeybindListMenuD["_KeybindIcon"].Image = "rbxassetid://12988755627"
KeybindListMenuD["_KeybindIcon"].ImageColor3 = Color3.fromRGB(0, 203.00000309944153, 203.00000309944153)
KeybindListMenuD["_KeybindIcon"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_KeybindIcon"].BackgroundTransparency = 1
KeybindListMenuD["_KeybindIcon"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_KeybindIcon"].BorderSizePixel = 0
KeybindListMenuD["_KeybindIcon"].Position = UDim2.new(0, 0, -0.0141179701, 0)
KeybindListMenuD["_KeybindIcon"].Size = UDim2.new(0, 18, 0, 18)
KeybindListMenuD["_KeybindIcon"].Name = "KeybindIcon"
KeybindListMenuD["_KeybindIcon"].Parent = KeybindListMenuD["_Holder"]

KeybindListMenuD["_UIStroke"].ApplyStrokeMode = Enum.ApplyStrokeMode.Border
KeybindListMenuD["_UIStroke"].Color = Color3.fromRGB(0, 255, 255)
KeybindListMenuD["_UIStroke"].Parent = KeybindListMenuD["_KeybindIcon"]

KeybindListMenuD["_UICorner"].CornerRadius = UDim.new(0, 5)
KeybindListMenuD["_UICorner"].Parent = KeybindListMenuD["_KeybindIcon"]

KeybindListMenuD["_KeybindTitle"].Font = Enum.Font.Arial
KeybindListMenuD["_KeybindTitle"].Text = "Keybinds"
KeybindListMenuD["_KeybindTitle"].TextColor3 = Color3.fromRGB(0, 203.00000309944153, 203.00000309944153)
KeybindListMenuD["_KeybindTitle"].TextSize = 13
KeybindListMenuD["_KeybindTitle"].TextStrokeColor3 = Color3.fromRGB(59.00000408291817, 59.00000408291817, 59.00000408291817)
KeybindListMenuD["_KeybindTitle"].TextStrokeTransparency = 0.5
KeybindListMenuD["_KeybindTitle"].TextWrapped = true
KeybindListMenuD["_KeybindTitle"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_KeybindTitle"].BackgroundTransparency = 1
KeybindListMenuD["_KeybindTitle"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_KeybindTitle"].BorderSizePixel = 0
KeybindListMenuD["_KeybindTitle"].Position = UDim2.new(0.205933198, 0, -0.0141179701, 0)
KeybindListMenuD["_KeybindTitle"].Size = UDim2.new(0, 84, 0, 18)
KeybindListMenuD["_KeybindTitle"].Name = "KeybindTitle"
KeybindListMenuD["_KeybindTitle"].Parent = KeybindListMenuD["_Holder"]

KeybindListMenuD["_UIStroke1"].ApplyStrokeMode = Enum.ApplyStrokeMode.Border
KeybindListMenuD["_UIStroke1"].Color = Color3.fromRGB(0, 255, 255)
KeybindListMenuD["_UIStroke1"].Parent = KeybindListMenuD["_KeybindTitle"]

KeybindListMenuD["_UICorner1"].CornerRadius = UDim.new(0, 5)
KeybindListMenuD["_UICorner1"].Parent = KeybindListMenuD["_KeybindTitle"]

KeybindListMenuD["_KeybindListMenuD"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_KeybindListMenuD"].BackgroundTransparency = 1
KeybindListMenuD["_KeybindListMenuD"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_KeybindListMenuD"].BorderSizePixel = 0
KeybindListMenuD["_KeybindListMenuD"].Position = UDim2.new(0, 0, 1.47058821, 0)
KeybindListMenuD["_KeybindListMenuD"].Size = UDim2.new(0, 105, 0, 209)
KeybindListMenuD["_KeybindListMenuD"].Name = "KeybindListMenuD"
KeybindListMenuD["_KeybindListMenuD"].Parent = KeybindListMenuD["_Holder"]

KeybindListMenuD["_UIListLayout"].Padding = UDim.new(0, 3)
KeybindListMenuD["_UIListLayout"].SortOrder = Enum.SortOrder.LayoutOrder
KeybindListMenuD["_UIListLayout"].Parent = KeybindListMenuD["_KeybindListMenuD"]

KeybindListMenuD["_SilentAim"].BackgroundColor3 = Color3.fromRGB(61.00000396370888, 61.00000396370888, 61.00000396370888)
KeybindListMenuD["_SilentAim"].BackgroundTransparency = 1
KeybindListMenuD["_SilentAim"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_SilentAim"].BorderSizePixel = 0
KeybindListMenuD["_SilentAim"].Position = UDim2.new(0.080824092, 0, 0.415061295, 0)
KeybindListMenuD["_SilentAim"].Size = UDim2.new(0, 106, 0, 17)
KeybindListMenuD["_SilentAim"].Name = "SilentAim"
KeybindListMenuD["_SilentAim"].Parent = KeybindListMenuD["_KeybindListMenuD"]

KeybindListMenuD["_Icon"].Image = "rbxassetid://7181750993"
KeybindListMenuD["_Icon"].ImageColor3 = Color3.fromRGB(0, 200.00000327825546, 200.00000327825546)
KeybindListMenuD["_Icon"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_Icon"].BackgroundTransparency = 1
KeybindListMenuD["_Icon"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Icon"].BorderSizePixel = 0
KeybindListMenuD["_Icon"].Position = UDim2.new(0, 0, -0.0141179701, 0)
KeybindListMenuD["_Icon"].Size = UDim2.new(0, 18, 0, 18)
KeybindListMenuD["_Icon"].Name = "Icon"
KeybindListMenuD["_Icon"].Parent = KeybindListMenuD["_SilentAim"]

KeybindListMenuD["_Title"].Font = Enum.Font.Arial
KeybindListMenuD["_Title"].Text = "Silent Aim"
KeybindListMenuD["_Title"].TextColor3 = Color3.fromRGB(0, 200.00000327825546, 200.00000327825546)
KeybindListMenuD["_Title"].TextSize = 13
KeybindListMenuD["_Title"].TextStrokeColor3 = Color3.fromRGB(59.00000408291817, 59.00000408291817, 59.00000408291817)
KeybindListMenuD["_Title"].TextStrokeTransparency = 0.5
KeybindListMenuD["_Title"].TextWrapped = true
KeybindListMenuD["_Title"].TextXAlignment = Enum.TextXAlignment.Left
KeybindListMenuD["_Title"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_Title"].BackgroundTransparency = 1
KeybindListMenuD["_Title"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Title"].BorderSizePixel = 0
KeybindListMenuD["_Title"].Position = UDim2.new(0.205933198, 0, -0.0141179701, 0)
KeybindListMenuD["_Title"].Size = UDim2.new(0, 84, 0, 18)
KeybindListMenuD["_Title"].Name = "Title"
KeybindListMenuD["_Title"].Parent = KeybindListMenuD["_SilentAim"]

KeybindListMenuD["_AutoShoot"].BackgroundColor3 = Color3.fromRGB(61.00000396370888, 61.00000396370888, 61.00000396370888)
KeybindListMenuD["_AutoShoot"].BackgroundTransparency = 1
KeybindListMenuD["_AutoShoot"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_AutoShoot"].BorderSizePixel = 0
KeybindListMenuD["_AutoShoot"].Position = UDim2.new(0.080824092, 0, 0.415061295, 0)
KeybindListMenuD["_AutoShoot"].Size = UDim2.new(0, 106, 0, 17)
KeybindListMenuD["_AutoShoot"].Name = "AutoShoot"
KeybindListMenuD["_AutoShoot"].Parent = KeybindListMenuD["_KeybindListMenuD"]

KeybindListMenuD["_Icon1"].Image = "rbxassetid://7181750993"
KeybindListMenuD["_Icon1"].ImageColor3 = Color3.fromRGB(0, 200.00000327825546, 200.00000327825546)
KeybindListMenuD["_Icon1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_Icon1"].BackgroundTransparency = 1
KeybindListMenuD["_Icon1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Icon1"].BorderSizePixel = 0
KeybindListMenuD["_Icon1"].Position = UDim2.new(0, 0, -0.0141179701, 0)
KeybindListMenuD["_Icon1"].Size = UDim2.new(0, 18, 0, 18)
KeybindListMenuD["_Icon1"].Name = "Icon"
KeybindListMenuD["_Icon1"].Parent = KeybindListMenuD["_AutoShoot"]

KeybindListMenuD["_Title1"].Font = Enum.Font.Arial
KeybindListMenuD["_Title1"].Text = "Auto Shoot"
KeybindListMenuD["_Title1"].TextColor3 = Color3.fromRGB(0, 200.00000327825546, 200.00000327825546)
KeybindListMenuD["_Title1"].TextSize = 13
KeybindListMenuD["_Title1"].TextStrokeColor3 = Color3.fromRGB(59.00000408291817, 59.00000408291817, 59.00000408291817)
KeybindListMenuD["_Title1"].TextStrokeTransparency = 0.5
KeybindListMenuD["_Title1"].TextWrapped = true
KeybindListMenuD["_Title1"].TextXAlignment = Enum.TextXAlignment.Left
KeybindListMenuD["_Title1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_Title1"].BackgroundTransparency = 1
KeybindListMenuD["_Title1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Title1"].BorderSizePixel = 0
KeybindListMenuD["_Title1"].Position = UDim2.new(0.205933198, 0, -0.0141179701, 0)
KeybindListMenuD["_Title1"].Size = UDim2.new(0, 84, 0, 18)
KeybindListMenuD["_Title1"].Name = "Title"
KeybindListMenuD["_Title1"].Parent = KeybindListMenuD["_AutoShoot"]

KeybindListMenuD["_ESPToggle"].BackgroundColor3 = Color3.fromRGB(61.00000396370888, 61.00000396370888, 61.00000396370888)
KeybindListMenuD["_ESPToggle"].BackgroundTransparency = 1
KeybindListMenuD["_ESPToggle"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_ESPToggle"].BorderSizePixel = 0
KeybindListMenuD["_ESPToggle"].Position = UDim2.new(0.080824092, 0, 0.415061295, 0)
KeybindListMenuD["_ESPToggle"].Size = UDim2.new(0, 106, 0, 17)
KeybindListMenuD["_ESPToggle"].Name = "ESPToggle"
KeybindListMenuD["_ESPToggle"].Parent = KeybindListMenuD["_KeybindListMenuD"]

KeybindListMenuD["_Icon2"].Image = "rbxassetid://7181750993"
KeybindListMenuD["_Icon2"].ImageColor3 = Color3.fromRGB(0, 200.00000327825546, 200.00000327825546)
KeybindListMenuD["_Icon2"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_Icon2"].BackgroundTransparency = 1
KeybindListMenuD["_Icon2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Icon2"].BorderSizePixel = 0
KeybindListMenuD["_Icon2"].Position = UDim2.new(0, 0, -0.0141179701, 0)
KeybindListMenuD["_Icon2"].Size = UDim2.new(0, 18, 0, 18)
KeybindListMenuD["_Icon2"].Name = "Icon"
KeybindListMenuD["_Icon2"].Parent = KeybindListMenuD["_ESPToggle"]

KeybindListMenuD["_Title2"].Font = Enum.Font.Arial
KeybindListMenuD["_Title2"].Text = "ESP Toggle"
KeybindListMenuD["_Title2"].TextColor3 = Color3.fromRGB(0, 200.00000327825546, 200.00000327825546)
KeybindListMenuD["_Title2"].TextSize = 13
KeybindListMenuD["_Title2"].TextStrokeColor3 = Color3.fromRGB(59.00000408291817, 59.00000408291817, 59.00000408291817)
KeybindListMenuD["_Title2"].TextStrokeTransparency = 0.5
KeybindListMenuD["_Title2"].TextWrapped = true
KeybindListMenuD["_Title2"].TextXAlignment = Enum.TextXAlignment.Left
KeybindListMenuD["_Title2"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_Title2"].BackgroundTransparency = 1
KeybindListMenuD["_Title2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Title2"].BorderSizePixel = 0
KeybindListMenuD["_Title2"].Position = UDim2.new(0.205933198, 0, -0.0141179701, 0)
KeybindListMenuD["_Title2"].Size = UDim2.new(0, 84, 0, 18)
KeybindListMenuD["_Title2"].Name = "Title"
KeybindListMenuD["_Title2"].Parent = KeybindListMenuD["_ESPToggle"]

KeybindListMenuD["_Zoom"].BackgroundColor3 = Color3.fromRGB(61.00000396370888, 61.00000396370888, 61.00000396370888)
KeybindListMenuD["_Zoom"].BackgroundTransparency = 1
KeybindListMenuD["_Zoom"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Zoom"].BorderSizePixel = 0
KeybindListMenuD["_Zoom"].Position = UDim2.new(0.080824092, 0, 0.415061295, 0)
KeybindListMenuD["_Zoom"].Size = UDim2.new(0, 106, 0, 17)
KeybindListMenuD["_Zoom"].Name = "Zoom"
KeybindListMenuD["_Zoom"].Parent = KeybindListMenuD["_KeybindListMenuD"]

KeybindListMenuD["_Icon3"].Image = "rbxassetid://7181750993"
KeybindListMenuD["_Icon3"].ImageColor3 = Color3.fromRGB(0, 200.00000327825546, 200.00000327825546)
KeybindListMenuD["_Icon3"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_Icon3"].BackgroundTransparency = 1
KeybindListMenuD["_Icon3"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Icon3"].BorderSizePixel = 0
KeybindListMenuD["_Icon3"].Position = UDim2.new(0, 0, -0.0141179701, 0)
KeybindListMenuD["_Icon3"].Size = UDim2.new(0, 18, 0, 18)
KeybindListMenuD["_Icon3"].Name = "Icon"
KeybindListMenuD["_Icon3"].Parent = KeybindListMenuD["_Zoom"]

KeybindListMenuD["_Title3"].Font = Enum.Font.Arial
KeybindListMenuD["_Title3"].Text = "Zoom"
KeybindListMenuD["_Title3"].TextColor3 = Color3.fromRGB(0, 200.00000327825546, 200.00000327825546)
KeybindListMenuD["_Title3"].TextSize = 13
KeybindListMenuD["_Title3"].TextStrokeColor3 = Color3.fromRGB(59.00000408291817, 59.00000408291817, 59.00000408291817)
KeybindListMenuD["_Title3"].TextStrokeTransparency = 0.5
KeybindListMenuD["_Title3"].TextWrapped = true
KeybindListMenuD["_Title3"].TextXAlignment = Enum.TextXAlignment.Left
KeybindListMenuD["_Title3"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_Title3"].BackgroundTransparency = 1
KeybindListMenuD["_Title3"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Title3"].BorderSizePixel = 0
KeybindListMenuD["_Title3"].Position = UDim2.new(0.205933198, 0, -0.0141179701, 0)
KeybindListMenuD["_Title3"].Size = UDim2.new(0, 84, 0, 18)
KeybindListMenuD["_Title3"].Name = "Title"
KeybindListMenuD["_Title3"].Parent = KeybindListMenuD["_Zoom"]

KeybindListMenuD["_MovementToggle"].BackgroundColor3 = Color3.fromRGB(61.00000396370888, 61.00000396370888, 61.00000396370888)
KeybindListMenuD["_MovementToggle"].BackgroundTransparency = 1
KeybindListMenuD["_MovementToggle"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_MovementToggle"].BorderSizePixel = 0
KeybindListMenuD["_MovementToggle"].Position = UDim2.new(0.080824092, 0, 0.415061295, 0)
KeybindListMenuD["_MovementToggle"].Size = UDim2.new(0, 106, 0, 17)
KeybindListMenuD["_MovementToggle"].Name = "MovementToggle"
KeybindListMenuD["_MovementToggle"].Parent = KeybindListMenuD["_KeybindListMenuD"]

KeybindListMenuD["_Icon4"].Image = "rbxassetid://7181750993"
KeybindListMenuD["_Icon4"].ImageColor3 = Color3.fromRGB(0, 200.00000327825546, 200.00000327825546)
KeybindListMenuD["_Icon4"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_Icon4"].BackgroundTransparency = 1
KeybindListMenuD["_Icon4"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Icon4"].BorderSizePixel = 0
KeybindListMenuD["_Icon4"].Position = UDim2.new(0, 0, -0.0141179701, 0)
KeybindListMenuD["_Icon4"].Size = UDim2.new(0, 18, 0, 18)
KeybindListMenuD["_Icon4"].Name = "Icon"
KeybindListMenuD["_Icon4"].Parent = KeybindListMenuD["_MovementToggle"]

KeybindListMenuD["_Title4"].Font = Enum.Font.Arial
KeybindListMenuD["_Title4"].Text = "Movement Toggle"
KeybindListMenuD["_Title4"].TextColor3 = Color3.fromRGB(0, 200.00000327825546, 200.00000327825546)
KeybindListMenuD["_Title4"].TextScaled = true
KeybindListMenuD["_Title4"].TextSize = 13
KeybindListMenuD["_Title4"].TextStrokeColor3 = Color3.fromRGB(59.00000408291817, 59.00000408291817, 59.00000408291817)
KeybindListMenuD["_Title4"].TextStrokeTransparency = 0.5
KeybindListMenuD["_Title4"].TextWrapped = true
KeybindListMenuD["_Title4"].TextXAlignment = Enum.TextXAlignment.Left
KeybindListMenuD["_Title4"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KeybindListMenuD["_Title4"].BackgroundTransparency = 1
KeybindListMenuD["_Title4"].BorderColor3 = Color3.fromRGB(0, 0, 0)
KeybindListMenuD["_Title4"].BorderSizePixel = 0
KeybindListMenuD["_Title4"].Position = UDim2.new(0.205933198, 0, -0.0141179701, 0)
KeybindListMenuD["_Title4"].Size = UDim2.new(0, 84, 0, 18)
KeybindListMenuD["_Title4"].Name = "Title"
KeybindListMenuD["_Title4"].Parent = KeybindListMenuD["_MovementToggle"]

UXI = KeybindListMenuD["_Holder"]

Hovered = false
Holding = false
MoveCon = nil

local InitialX, InitialY, UIInitialPos

--// Functions

local function Drag()
	if Holding == false then MoveCon:Disconnect(); return end
	local distanceMovedX = InitialX - mouse.X
	local distanceMovedY = InitialY - mouse.Y

	UXI.Position = UIInitialPos - UDim2.new(0, distanceMovedX, 0, distanceMovedY)
end

--// Connections

UXI.MouseEnter:Connect(function()
	Hovered = true
end)

UXI.MouseLeave:Connect(function()
	Hovered = false
end)

uis.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		Holding = Hovered
		if Holding then
			InitialX, InitialY = mouse.X, mouse.Y
			UIInitialPos = UXI.Position

			MoveCon = mouse.Move:Connect(Drag)
		end
	end
end)

uis.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		Holding = false
	end
end)

local function bindupdate()
    if aimbool then
        KeybindListMenuD["_Title"].TextColor3 = Color3.fromRGB(0, 255, 255)
        KeybindListMenuD["_Icon"].ImageColor3 = Color3.fromRGB(0, 255, 255)
    elseif not aimbool then
        KeybindListMenuD["_Title"].TextColor3 = Color3.fromRGB(0, 170, 170)
        KeybindListMenuD["_Icon"].ImageColor3 = Color3.fromRGB(0, 170, 170)
    end

    if aimtrigger then
        KeybindListMenuD["_Title1"].TextColor3 = Color3.fromRGB(0, 255, 255)
        KeybindListMenuD["_Icon1"].ImageColor3 = Color3.fromRGB(0, 255, 255)
    elseif not aimtrigger then
        KeybindListMenuD["_Title1"].TextColor3 = Color3.fromRGB(0, 170, 170)
        KeybindListMenuD["_Icon1"].ImageColor3 = Color3.fromRGB(0, 170, 170)
    end

    if espbool then
        KeybindListMenuD["_Title2"].TextColor3 = Color3.fromRGB(0, 255, 255)
        KeybindListMenuD["_Icon2"].ImageColor3 = Color3.fromRGB(0, 255, 255)
    elseif not espbool then
        KeybindListMenuD["_Title2"].TextColor3 = Color3.fromRGB(0, 170, 170)
        KeybindListMenuD["_Icon2"].ImageColor3 = Color3.fromRGB(0, 170, 170)
    end

    if zoomtoggle then
        KeybindListMenuD["_Title3"].TextColor3 = Color3.fromRGB(0, 255, 255)
        KeybindListMenuD["_Icon3"].ImageColor3 = Color3.fromRGB(0, 255, 255)
    elseif not zoomtoggle then
        KeybindListMenuD["_Title3"].TextColor3 = Color3.fromRGB(0, 170, 170)
        KeybindListMenuD["_Icon3"].ImageColor3 = Color3.fromRGB(0, 170, 170)
    end

    if charsemifly then
        KeybindListMenuD["_Title4"].TextColor3 = Color3.fromRGB(0, 255, 255)
        KeybindListMenuD["_Icon4"].ImageColor3 = Color3.fromRGB(0, 255, 255)
    elseif not charsemifly then
        KeybindListMenuD["_Title4"].TextColor3 = Color3.fromRGB(0, 170, 170)
        KeybindListMenuD["_Icon4"].ImageColor3 = Color3.fromRGB(0, 170, 170)
    end
end

keybinds:AddToggle('Keybind List', true, nil, function(v)
    keybindmenuvisible = v
end)

--speedhack--

function startspeedhack()
    local speaker = game:GetService("Players").LocalPlayer
    local chr = speaker.Character
    local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
    local hb = game:GetService("RunService").Heartbeat
    while speedbool and chr and hum and hum.Parent do
        local delta = hb:Wait()
        if hum.MoveDirection.Magnitude > 0 then
            chr:TranslateBy(hum.MoveDirection * tonumber(speedboost) * delta * 10)
        else
            chr:TranslateBy(hum.MoveDirection * delta * 10)
        end
    end
end

privatemods:AddToggle('Enabled', true, nil, function(v)
    speedbool = v
    startspeedhack()
end)
privatemods:AddSlider('Speed Slider', 1.5, 0, 1.2, function(c) 
    speedboost = c
end)

privatemods:AddSeparateBar()

privatemods:AddToggle('Jesus', true, nil, function(v)
    worldjesus = v
    if v then
        while worldjesus do
            wait()
            local hitPart = workspace:Raycast(localplayer.Character:FindFirstChild("HumanoidRootPart").Position, Vector3.new(0, -5, 0) + localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 5, RaycastParams.new())
            if hitPart and hitPart.Material == Enum.Material.Water then
                local clone = Instance.new("Part")
                clone.Parent = waterplatforms
                clone.Position = hitPart.Position
                clone.Anchored = true
                clone.CanCollide = true
                clone.Size = Vector3.new(10,0.2,10)
                clone.Transparency = 1
            end
        end
    else
        for i,v in ipairs(waterplatforms:GetChildren()) do
            v:Destroy()
        end
    end
end)

privatemods:AddSeparateBar()

privatemods:AddToggle('Main Toggle', true, nil, function(v)
    changerbool = v
end)

privatemods:AddSeparateBar()

privatemods:AddSlider('Player Walkspeed', 50, 0, 16, function(c: number) 
    changerspeed = c
end)
privatemods:AddSlider('Player Jumppower', 25, 0, 1, function(c) 
    changerjump = c
end)

privatemods:AddSeparateBar()

privatemods:AddSlider('Player Hipheight', 15, 0, 1, function(c) 
    changerheight = c
end)
privatemods:AddSlider('Player Gravity', 300, 0, 50, function(c) 
    changergrav = c
end)

worldh:AddToggle('No Grass', true, nil, function(v)
    sethiddenproperty(workspace.Terrain, "Decoration", not v)
end)
worldh:AddToggle('No Leaves', true, nil, function(v)
    worldleaves = v
end)

worldh:AddSeparateBar()

worldh:AddSlider('Clock Time', 24, 0, 14, function(c) 
    worldclock = c
    game.Lighting.ClockTime = c
end)

worldh:AddToggle('No Fog', true, nil, function(v)
	while v do task.wait()
		game.Lighting.Atmosphere.Density = 0
		game.Lighting.Atmosphere.Offset = 0
	end
end)

local prevAmbient = game.Lighting.Ambient
local prevOutdoor = game.Lighting.OutdoorAmbient

worldh:AddToggle('Ambient Toggle', true, nil, function(v)
    worldvisualstoggle = v
    if worldvisualstoggle then
        game.Lighting.Ambient = worldambient
        game.Lighting.OutdoorAmbient = worldoutdoor
    else
        game.Lighting.Ambient = prevAmbient
        game.Lighting.OutdoorAmbient = prevOutdoor
    end
end)

worldh:AddColorPallete('Ambient Color', Color3.fromRGB(255, 255, 255), function(a) 
    worldambient = a
end)

worldh:AddColorPallete('Outdoor Ambient Color', Color3.fromRGB(255, 255, 255), function(a) 
    worldoutdoor = a
end)


--tracers--

local function runtracer(start, endp)
    local beam = Instance.new("Beam")
    beam.Name = "LineBeam"
    beam.Parent = game.Workspace
    local startpart = Instance.new("Part")
    startpart.CanCollide = false
    startpart.CanQuery = false
    startpart.Transparency = 1
    startpart.Position = start
    startpart.Parent = workspace
    startpart.Anchored = true
    startpart.Size = Vector3.new(0.01, 0.01, 0.01)
    local endpart = Instance.new("Part")
    endpart.CanCollide = false
    endpart.CanQuery = false
    endpart.Transparency = 1
    endpart.Position = endp
    endpart.Parent = workspace
    endpart.Anchored = true
    endpart.Size = Vector3.new(0.01, 0.01, 0.01)
    beam.Attachment0 = Instance.new("Attachment", startpart)
    beam.Attachment1 = Instance.new("Attachment", endpart)
    beam.Color = ColorSequence.new(traccolor,  traccolor)
    beam.Width0 = 0.05
    beam.Width1 = 0.05
    beam.FaceCamera = true
    beam.Transparency = NumberSequence.new(0)
    beam.LightEmission = 1

    if tracertexture ~= nil then
        beam.Texture = tracertexture
        if tracertexture == "http://www.roblox.com/asset/?id=77261843796788" then
            beam.TextureSpeed = 3
            beam.TextureLength = (endp - start).Magnitude
            beam.Width0 = 0.3
            beam.Width1 = 0.3
        elseif tracertexture == "http://www.roblox.com/asset/?id=75056325012653" then
            beam.TextureSpeed = 3
            beam.TextureLength = (endp - start).Magnitude
            beam.Width0 = 0.3
            beam.Width1 = 0.3
        end
    end

    wait(tracwait)

    beam:Destroy()
    startpart:Destroy()
    endpart:Destroy()
end

--silent aim--

local function isonscreen(object)
    local p, bool = wcamera:WorldToScreenPoint(object.Position)
    return bool
end
local v311 = require(game.ReplicatedStorage.Modules:WaitForChild("UniversalTables"))
local globalist11 = v311.ReturnTable("GlobalIgnoreListProjectile")
local function isvisible(char, object)
    if not localplayer.Character or not localplayer.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    if aimvischeck == false then
        return true
    end

    local origin = localplayer.Character.HumanoidRootPart.Position + Vector3.new(0, 1, 0)
    if aimselftrack then
        local plrping = localplayer:GetNetworkPing()
        local key = math.floor((plrping + 5) / 10) * 10

        if selftrack_data[key] ~= nil then
            origin = selftrack_data[key]
        end
    end

    local pos = object.Position
    local dir = pos - origin
    local dist = dir.Magnitude + 5
    local penetrated = true
    dir = dir.Unit

    local params = RaycastParams.new()
    params.IgnoreWater = true
    params.CollisionGroup = "WeaponRay"
    params.FilterDescendantsInstances = {
        localplayer.Character:GetChildren(),
        wcamera:GetChildren(),
        globalist11,
        aimignoreparts
    }

    local ray = workspace:Raycast(origin, dir * dist, params)
    if aimbang then
        if ray and ray.Instance:IsDescendantOf(char) then
            return true
        elseif ray and ray.Instance.Name ~= "Terrain" and not ray.Instance:GetAttribute("NoPen") then
            local armorpen4 = 10
            local gname, gunmodel, guninv = getcurrentgun(localplayer)
            if guninv then
                armorpen4 = getcurrentammo(guninv):GetAttribute("ArmorPen")
            end

            local FunctionLibraryExtension = require(game.ReplicatedStorage.Modules.FunctionLibraryExtension)
            local armorpen1, newpos2 = FunctionLibraryExtension.Penetration(FunctionLibraryExtension, ray.Instance, ray.Position, dir, armorpen4)
            if armorpen1 == nil or newpos2 == nil then
                return false
            end

            local neworigin = ray.Position + dir * 0.01
            local newray = workspace:Raycast(neworigin, dir * (dist - (neworigin - origin).Magnitude), params)
            if newray and newray.Instance:IsDescendantOf(char) then
                return true
            end
        end
    else
        if ray and ray.Instance:IsDescendantOf(char) then
            return true
        end
    end

    return false
end
local function predictpos(tpart, bulletspeed, bulletdrop)
    local velocity = tpart.Velocity
    local distance = (wcamera.CFrame.Position - tpart.CFrame.Position).Magnitude
    local tth = (distance / bulletspeed)
    local predict1 = tpart.CFrame.Position + (velocity * tth)
    local delta = (predict1 - tpart.CFrame.Position).Magnitude
    local finalspeed = bulletspeed - 0.013 * bulletspeed ^ 2 * tth ^ 2
    tth += (delta / finalspeed)
    local predictres1 = tpart.CFrame.Position + (velocity * tth)
    local predictres2 = bulletdrop * tth ^ 2
    if tostring(drop_timing):find("nan") then
        predictres2 = 0
    end
    return predictres1 -- + Vector3.new(0,predictres2,0)
end
local function choosetarget()
    local cent = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2)
    local cdist = math.huge
    local ctar = nil
    local cpart = nil

    local ammodistance = 999999999
    if aimdistcheck then
        local gname, gunmodel, guninv = getcurrentgun(localplayer)
        if guninv then
            armorpen4 = getcurrentammo(guninv):GetAttribute("MuzzleVelocity")
        end
    end

    local bparts = {
        "Head",
        "HeadTopHitBox",
        "FaceHitBox",
        "UpperTorso",
        "LowerTorso",
        "LeftUpperArm",
        "RightUpperArm",
        "LeftLowerArm",
        "RightLowerArm",
        "LeftHand",
        "RightHand",
        "LeftUpperLeg",
        "RightUpperLeg",
        "LeftLowerLeg",
        "RightLowerLeg",
        "LeftFoot",
        "RightFoot"
    }

    local xbparts = {
        "LeftLowerLeg",
        "RightLowerLeg",
        "LeftFoot",
        "RightFoot"
    }

    local function chooseTpart(charact)
        if aimpart == "Head" then
            return charact:FindFirstChild("Head")
        elseif aimpart == "Torso" then
            return charact:FindFirstChild("UpperTorso")
        elseif aimpart == "Legs" then
            return charact:FindFirstChild(xbparts[math.random(1, #xbparts)])
        elseif aimpart == "Scripted" then
            local head = charact:FindFirstChild("Head")
            local upperTorso = charact:FindFirstChild("UpperTorso")
            if not isvisible(charact, head) then
                return upperTorso
            else
                return head
            end
        elseif aimpart == "Random" then
            return charact:FindFirstChild(bparts[math.random(1, #bparts)])
        end
    end

    if aimbots then --priority 2 (bots)
        for _, botfold in ipairs(workspace.AiZones:GetChildren()) do
            for _, bot in ipairs(botfold:GetChildren()) do
                if bot:IsA("Model") and bot:FindFirstChild("Humanoid") and bot.Humanoid.Health > 0 then
                    if debuglistmode95x then
                        if debuglistmode24 == "Blacklist" then 
                            if table.find(debuglist95, bot.Name) ~= nil then
                                continue
                            end
                        elseif debuglistmode24 == "Whitelist" then 
                            if table.find(debuglist95, bot.Name) == nil then
                                continue
                            end
                        end
                    end

                    local potroot = chooseTpart(bot)
                    if potroot and localplayer.Character then
                        local spoint = wcamera:WorldToViewportPoint(potroot.Position)
                        local optpoint = Vector2.new(spoint.X, spoint.Y)
                        local dist = (optpoint - cent).Magnitude
                        
                        local betweendist = (localplayer.Character.PrimaryPart.Position - potroot.Position).Magnitude * 0.3336
                        local betweendistSTUDS = (localplayer.Character.PrimaryPart.Position - potroot.Position).Magnitude
                        if dist <= aimfovcircle.Radius and dist < cdist and betweendist < aimdistance and betweendistSTUDS < ammodistance then
                            local canvis = isvisible(bot, potroot)
                            if canvis and isonscreen(potroot) then
                                cdist = dist
                                ctar = bot
                                cpart = potroot
                            end
                        end
                    end
                end
            end
        end
    end

    for _, pottar in ipairs(game.Players:GetPlayers()) do --priority 1 (players)
        if pottar ~= localplayer and pottar.Character and localplayer.Character.PrimaryPart ~= nil then
            if debuglistmode24 == "Blacklist" then 
                if table.find(debuglist95, pottar.Name) ~= nil then
                    continue
                end
            elseif debuglistmode24 == "Whitelist" then 
                if table.find(debuglist95, pottar.Name) == nil then
                    continue
                end
            end

            local potroot = chooseTpart(pottar.Character)
            if potroot then
                local spoint = wcamera:WorldToViewportPoint(potroot.Position)
                local optpoint = Vector2.new(spoint.X, spoint.Y)
                local dist = (optpoint - cent).Magnitude
                
                local betweendist = (localplayer.Character.PrimaryPart.Position - potroot.Position).Magnitude * 0.3336
                local betweendistSTUDS = (localplayer.Character.PrimaryPart.Position - potroot.Position).Magnitude
                if dist <= aimfovcircle.Radius and dist < cdist and betweendist < aimdistance and betweendistSTUDS < ammodistance then
                    local canvis = isvisible(pottar.Character, potroot)
                    if canvis and isonscreen(potroot) then
                        cdist = dist
                        ctar = pottar
                        cpart = potroot
                    end
                end
            end
        end
    end

    if ctar == nil then
        aimtarget = nil
        aimtargetpart = nil
    else
        aimtarget = ctar
        aimtargetpart = cpart
    end
end

aimmodfunc = function(prikol, p49, p50, p_u_51, _, p52, p53, p54, p55)
    local v_u_6 = game.ReplicatedStorage.Remotes.VisualProjectile
    local v_u_108 = 1
    local v_u_106 = 0
    local v_u_7 = game.ReplicatedStorage.Remotes.FireProjectile
    local target = aimtarget
    local target_part
    local v_u_4 = require(game.ReplicatedStorage.Modules:WaitForChild("FunctionLibraryExtension"))
    local v9 = game:GetService("Players")
    local v_u_15 = v9.LocalPlayer
    local v_u_115 = v_u_4:GetEstimatedCameraPosition(v_u_15)
    local v_u_103
    local v_u_114
    local v_u_16 = game.ReplicatedStorage.Players:FindFirstChild(v_u_15.Name)
    local v_u_64 = v_u_16.Status.GameplayVariables:GetAttribute("EquipId")
    local v_u_13 = game.ReplicatedStorage:WaitForChild("VFX")
    local v_u_2 = require(game.ReplicatedStorage.Modules:WaitForChild("VFX"))
    local v3 = require(game.ReplicatedStorage.Modules:WaitForChild("UniversalTables"))
    local v_u_5 = game.ReplicatedStorage.Remotes.ProjectileInflict
    local v_u_10 = game:GetService("ReplicatedStorage")
    local v_u_12 = v_u_10:WaitForChild("RangedWeapons")
    local v_u_17 = game.ReplicatedStorage.Temp
    local v9 = game:GetService("Players")
    local v_u_56 = v_u_15.Character
    local v135 = 500000
    local v_u_18 = v3.ReturnTable("GlobalIgnoreListProjectile")
    local v_u_115 = v_u_4:GetEstimatedCameraPosition(v_u_15)
    local v65 = v_u_10.AmmoTypes:FindFirstChild(p52)
    local v_u_74 = v65:GetAttribute("Pellets")
    local v60 = p50.ItemRoot
    local v61 = p49.ItemProperties
    local v62 = v_u_12:FindFirstChild(p49.Name)
    local v63 = v61:FindFirstChild("SpecialProperties")
    local v_u_66 = v63 and v63:GetAttribute("TracerColor") or v62:GetAttribute("ProjectileColor")
    local itemprop = require(v_u_16.Inventory:FindFirstChild(p49.Name).SettingsModule)
    local bulletspeed = v65:GetAttribute("MuzzleVelocity")
    local armorpen4 = v65:GetAttribute("ArmorPen")
    local tracerendpos = Vector3.zero
    local v79 = {
        ["x"] = {
            ["Value"] = 0
        },
        ["y"] = {
            ["Value"] = 0
        }
    }

    if v_u_56:FindFirstChild(p49.Name) then
        local v83 = 0.001 
        local v82 = 0.001
        local v81 = 10000
        if v61.Tool:GetAttribute("MuzzleDevice") or "Default" == "Suppressor" then
            if tick() - p53 < 0.8 then
                v_u_4:PlaySoundV2(v60.FireSoundSupressed, v60.FireSoundSupressed.TimeLength, v_u_17)
            else
                v_u_4:PlaySoundV2(v60.FireSoundSupressed, v60.FireSoundSupressed.TimeLength, v_u_17)
            end
        elseif tick() - p53 < 0.8 then
            v_u_4:PlaySoundV2(v60.FireSound, v60.FireSound.TimeLength, v_u_17)
        else
            v_u_4:PlaySoundV2(v60.FireSound, v60.FireSound.TimeLength, v_u_17)
        end
        local v_u_59
        if p_u_51.Item.Attachments:FindFirstChild("Front") then
            v_u_59 = p_u_51.Item.Attachments.Front:GetChildren()[1].Barrel
            local _ = p50.Attachments.Front:GetChildren()[1].Barrel
        else
            v_u_59 = p_u_51.Item.Barrel
            local _ = p50.Barrel
        end

        if target ~= nil and aimtargetpart ~= nil then
            target_part = aimtargetpart
            if aimtype == "Prediction" then
                local buldrop = v65:GetAttribute("ProjectileDrop")
                local bulsp = v65:GetAttribute("MuzzleVelocity")
                target_part = predictpos(target_part, bulsp, buldrop)
                v_u_103 = CFrame.new(v_u_115, target_part).LookVector
            else
                v_u_103 = CFrame.new(v_u_115, target_part.Position).LookVector
            end
            v_u_114 = v_u_103
        else
            target_part = p55
            v_u_103 = CFrame.new(v_u_115, v_u_15:GetMouse().Hit.Position).LookVector
            v_u_114 = v_u_103
        end

        function v185()
            local v_u_110 = RaycastParams.new()
            v_u_110.FilterType = Enum.RaycastFilterType.Exclude
            local v_u_111 = { v_u_56, p_u_51, v_u_18, aimignoreparts}
            v_u_110.FilterDescendantsInstances = v_u_111
            v_u_110.CollisionGroup = "WeaponRay"
            v_u_110.IgnoreWater = true

            v_u_106 += 1

            local usethisvec = v_u_114
            if aimdebug1 then
                usethisvec = Vector3.new(0,1,0)
            end

            if v_u_106 == 1 then
                task.spawn(function()
                    for i=1, BurstFire do
                        if aimtype == "Instant Hit" then
                            if not v_u_7:InvokeServer(usethisvec, v_u_108, tick()-15) then 
                                game.ReplicatedStorage.Modules.FPS.Binds.AdjustBullets:Fire(v_u_64, 1)
                            end
                        else
                            if not v_u_7:InvokeServer(usethisvec, v_u_108, tick()) then 
                                game.ReplicatedStorage.Modules.FPS.Binds.AdjustBullets:Fire(v_u_64, 1)
                            end
                        end
                    end
                end)
            elseif 1 < v_u_106 then
                for i=1, BurstFire do
                    v_u_6:FireServer(usethisvec, v_u_108)
                end
            end

            local v_u_131 = nil
            local v_u_132 = 0
            local v_u_133 = 0

            if (aimtype == "Prediction" or aimfakewait) and target ~= nil then
                local tpart 
                if target:IsA("Model") then
                    tpart = target.HumanoidRootPart
                else
                    tpart = target.Character.HumanoidRootPart
                end
                local velocity = tpart.Velocity
                local distance = (wcamera.CFrame.Position - tpart.CFrame.Position).Magnitude
                local tth = (distance / bulletspeed)
                task.wait(tth + 0.01)

                if aimtarget ~= nil and aimtargetpart ~= nil then
                    target_part = aimtargetpart
                    if aimtype == "Prediction" then
                        local buldrop = v65:GetAttribute("ProjectileDrop")
                        local bulsp = v65:GetAttribute("MuzzleVelocity")
                        target_part = predictpos(target_part, bulsp, buldrop)
                        v_u_103 = CFrame.new(v_u_115, target_part).LookVector
                    else
                        v_u_103 = CFrame.new(v_u_115, target_part.Position).LookVector
                    end
                    v_u_114 = v_u_103
                else
                    target_part = p55
                    v_u_103 = CFrame.new(v_u_115, v_u_15:GetMouse().Hit.Position).LookVector
                    v_u_114 = v_u_103
                end
            end

            function v184(p134)
                v_u_132 = v_u_132 + p134
                if true then
                    v_u_133 = v_u_133 + v_u_132
                    local v136 = workspace:Raycast(v_u_115, v_u_114 * v135, v_u_110)
                    local v137 = nil
                    local v138 = nil
                    local v139 = nil
                    local v140
                    if v136 then
                        v137 = v136.Instance
                        v140 = v136.Position
                        v138 = v136.Normal
                        v139 = v136.Material
                    else
                        v140 = v_u_115 + v_u_114 * v135
                    end

                    if v137 == nil then
                        v_u_131:Disconnect()
                        return
                    end

                    tracerendpos = v140

                    local v171 = v_u_4:FindDeepAncestor(v137, "Model")
                    if v171:FindFirstChild("Humanoid") then -- if hit target
                        local ran = math.random(1, 100)
                        local ranbool = ran <= aimchance
                        if ranbool then
                            local v175 = v137.CFrame:ToObjectSpace(CFrame.new(v140))

                            if target_part then
                                v_u_5:FireServer(target_part, v175, v_u_108, tick())
                            else
                                v_u_5:FireServer(v137, v175, v_u_108, tick())
                            end
                        else
                            local v175 = v137.CFrame:ToObjectSpace(CFrame.new(v140))
                            v_u_5:FireServer(p55, v175, v_u_108, tick())
                        end

                        v_u_2.Impact(v137, v140, v138, v139, v_u_114, "Ranged", true)
                    elseif v137.Name == "Terrain" then -- if hit terrain
                        local v175 = v137.CFrame:ToObjectSpace(CFrame.new(v140))
                        v_u_5:FireServer(v137, v175, v_u_108, tick())

                        v_u_2.Impact(v137, v140, v138, v139, v_u_114, "Ranged", true)
                    else -- if hit not target then try wallbang
                        v_u_2.Impact(v137, v140, v138, v139, v_u_114, "Ranged", true)

                        local arg1, arg2, arg3 = v_u_4.Penetration(v_u_4, v137, v140, v_u_114, armorpen4)
                        if arg1 == nil or arg2 == nil then
                            v_u_131:Disconnect()
                            return
                        end

                        armorpen4 = arg1
                        if armorpen4 > 0 then
                            v_u_115 = arg2
                            v_u_2.Impact(unpack(arg3))
                            return
                        end

                        v_u_131:Disconnect()
                        return

                        --[[
                        if target_part ~= nil and target ~= nil then --wallbang
                            --[[
                            local bangparams = RaycastParams.new()
                            bangparams.FilterType = Enum.RaycastFilterType.Include
                            bangparams.FilterDescendantsInstances = {bangtarget}
                            bangparams.CollisionGroup = "WeaponRay" 
                            bangparams.IgnoreWater = true
                            --

                            local banglist = v_u_111
                            table.insert(banglist, v137)
                            v_u_110.FilterDescendantsInstances = banglist

                            --[[
                            local bangray = workspace:Raycast(v_u_115, v_u_114 * 123123123, v_u_110)
                            if bangray then
                                local plrmodel = v_u_4:FindDeepAncestor(bangray.Instance, "Model")

                                local fake175 = bangray.Instance.CFrame:ToObjectSpace(CFrame.new(v60.Position))
                                v_u_5:FireServer(bangray.Instance, fake175, v_u_108 + 1, tick() + 2)

                                task.spawn(function()
                                    if tracbool == true then
                                        runtracer(v60.Position, bangray.Position)
                                    end
                                end)
                            end
                            --
                        else --no wallbang 
                            local ran = math.random(1, 100)
                            local ranbool = ran <= aimchance
                            if ranbool then
                                local v175 = v137.CFrame:ToObjectSpace(CFrame.new(v140))
                                v_u_5:FireServer(v137, v175, v_u_108, tick())
                            else
                                local v175 = v137.CFrame:ToObjectSpace(CFrame.new(v140))
                                v_u_5:FireServer(p55, v175, v_u_108, tick())
                            end
                            v_u_2.Impact(v137, v140, v138, v139, v_u_114, "Ranged", true)
                        end
                        ]]
                    end
                end

                v_u_131:Disconnect()
                return
            end
            v_u_131 = game:GetService("RunService").RenderStepped:Connect(v184)
            return
        end
        if v_u_74 == nil then
            task.spawn(v185)
        else
            for _ = 1, v_u_74 do
                task.spawn(v185)
            end
        end

        if tracbool then
            task.spawn(function()
                task.wait(0.05)
                if tracerendpos == Vector3.zero then return end
                runtracer(v60.Position, tracerendpos)
            end)
        end

        return v83, v82, v81, v79
    end
end

--nosway

do
    local mod = require(game.ReplicatedStorage.Modules.FPS)
    local ogfunc = mod.updateClient

    mod.updateClient = function(a1,a2,a3)
        arg1, arg2, arg3 = ogfunc(a1,a2,a3)
        
        if NoSway then
            a1.springs.sway.Speed = 0
            a1.springs.walkCycle.Speed = 0
            a1.springs.sprintCycle.Speed = 0
            a1.springs.strafeTilt.Speed = 0
            a1.springs.jumpTilt.Speed = 0
        else
            a1.springs.sway.Speed = 4
            a1.springs.walkCycle.Speed = 4
            a1.springs.sprintCycle.Speed = 4
            a1.springs.strafeTilt.Speed = 4
            a1.springs.jumpTilt.Speed = 4
        end

        return arg1, arg2, arg3
    end
end

--instantequip

workspace.Camera.ChildAdded:Connect(function(ch)
    if InstaEquip and ch:IsA("Model") then
        task.wait(0.015)
        for i,v in ch.Humanoid.Animator:GetPlayingAnimationTracks() do
            if v.Animation.Name == "Equip" then
                --v:AdjustSpeed(15)
                v.TimePosition = v.Length - 0.01
            end
        end
    end
end)

--hitsounds
localplayer.CharacterAdded:Connect(function(lchar)
    local maingui = localplayer.PlayerGui:WaitForChild("MainGui")
    if maingui then
        maingui.ChildAdded:Connect(function(Sound)
            if Sound:IsA("Sound") and hitsoundbool then
                if Sound.SoundId == "rbxassetid://4585351098" or Sound.SoundId == "rbxassetid://4585382589" then --headshot
                    Sound.SoundId = hitsoundlib[hitsoundhead]
                elseif Sound.SoundId == "rbxassetid://4585382046" or Sound.SoundId == "rbxassetid://4585364605" then --bodyshot
                    Sound.SoundId = hitsoundlib[hitsoundbody]
                end
            end
        end)
    end
end)
localplayer.PlayerGui.MainGui.ChildAdded:Connect(function(Sound)
    if Sound:IsA("Sound") and hitsoundbool then
        if Sound.SoundId == "rbxassetid://4585351098" or Sound.SoundId == "rbxassetid://4585382589" then --headshot
            Sound.SoundId = hitsoundlib[hitsoundhead]
        elseif Sound.SoundId == "rbxassetid://4585382046" or Sound.SoundId == "rbxassetid://4585364605" then --bodyshot
            Sound.SoundId = hitsoundlib[hitsoundbody]
        end
    end
end)

--esp--

local function setupesp(obj, dtype, otype1)
    local dobj
    local tableinfo
    if dtype == "Name" then
        dobj = Drawing.new("Text")
        dobj.Visible = espbool
        dobj.Center = true
        dobj.Outline = true
        dobj.Size = esptextsize
        dobj.Color = esptextcolor
        dobj.OutlineColor = Color3.new(0, 0, 0)
        tableinfo = {
            primary = obj,
            type = "Name",
            otype = otype1
        }
    elseif dtype == "HP" then
        dobj = Drawing.new("Text")
        dobj.Visible = espbool
        dobj.Center = true
        dobj.Outline = true
        dobj.Size = esptextsize
        dobj.Color = esptextcolor
        dobj.OutlineColor = Color3.new(0, 0, 0)
        tableinfo = {
            primary = obj,
            type = "HP",
            otype = otype1
        }
    elseif dtype == "Distance" then
        dobj = Drawing.new("Text")
        dobj.Visible = espbool
        dobj.Center = true
        dobj.Outline = true
        dobj.Size = esptextsize
        dobj.Color = esptextcolor
        dobj.OutlineColor = Color3.new(0, 0, 0)
        tableinfo = {
            primary = obj,
            type = "Distance",
            otype = otype1
        }
    elseif dtype == "Hotbar" then
        dobj = Drawing.new("Text")
        dobj.Visible = espbool
        dobj.Center = true
        dobj.Outline = true
        dobj.Size = esptextsize
        dobj.Color = esptextcolor
        dobj.OutlineColor = Color3.new(0, 0, 0)
        tableinfo = {
            primary = obj,
            type = "Hotbar",
            otype = otype1
        }
    elseif dtype == "Highlight" then
        dobj = Instance.new("Highlight")
        dobj.Name = math.random(10,100)
        dobj.FillColor = espfillcolor
        dobj.OutlineColor = esplinecolor
        dobj.FillTransparency = espchamsfill
        dobj.OutlineTransparency = espchamsline
        if obj.Parent:IsA("Model") then
            dobj.Parent = obj.Parent
        else
            dobj:Destroy()
            return
        end

        dobj.Enabled = esphigh
        tableinfo = {
            primary = obj,
            type = "Highlight",
            otype = otype1
        }
    end

    if dobj == nil or tableinfo == nil then return end

    local function selfdestruct()
        if dtype == "Highlight" then
            dobj.Enabled = false
            dobj:Destroy()
        else
            dobj.Visible = false
            dobj:Remove()
        end
        if removing then
            removing:Disconnect()
            removing = nil
        end
        return
    end

    if esptable[dobj] ~= nil then
        selfdestruct()
        return
    else
        esptable[dobj] = tableinfo
    end

    removing = workspace.DescendantRemoving:Connect(function(what)
        if what == obj then
            esptable[dobj] = nil
            selfdestruct()
        end
    end)
end
local function startesp(v, otype)
    task.spawn(function()
        if otype == "Extract" then
            setupesp(v, "Name", otype)
            setupesp(v, "Distance", otype)
        elseif otype == "Loot" then
            local Amount
            local TotalPrice = 0
            local Value = 0

            if v.Parent and v.Parent:FindFirstChild("Inventory") then else
                return
            end

            for _, i in ipairs(v.Parent.Inventory:GetChildren()) do
                Amount = i.ItemProperties:GetAttribute("Amount") or 1
                TotalPrice += i.ItemProperties:GetAttribute("Price") or 0
                Value += (valcache[i.ItemProperties:GetAttribute("CallSign")] or 0) * Amount
            end

            if Value >= 4 then
                setupesp(v, "Name", otype)
                setupesp(v, "Hotbar", otype)
                setupesp(v, "Distance", otype)
            end
        elseif otype == "Dead333" then
            local hd = v:WaitForChild("Head",1)
            if hd == nil then return end
            setupesp(hd, "Name", otype)
            setupesp(hd, "Distance", otype)
        else
            local hd = v:WaitForChild("Head",1)
            if hd == nil then return end
            setupesp(hd, "Name", otype)
            setupesp(hd, "HP", otype)
            setupesp(hd, "Distance", otype)
            setupesp(hd, "Hotbar", otype)
            setupesp(hd, "Highlight", otype) 
        end
    end)
end
for i,v in ipairs(workspace:GetDescendants()) do
    if v and v:FindFirstChild("Humanoid") and v ~= localplayer.Character then
        if game.Players:FindFirstChild(v.Name) and not v:FindFirstAncestor("DroppedItems") then
            startesp(v, "Plr")
        elseif v:FindFirstAncestor("AiZones") then
            startesp(v, "Bot333")
        elseif v:FindFirstAncestor("DroppedItems") then
            startesp(v, "Dead333")
        end
    elseif v.Parent == workspace:FindFirstChild("NoCollision"):FindFirstChild("ExitLocations") then
        startesp(v, "Extract")
    elseif v:FindFirstAncestor("Containers") and v:IsA("MeshPart") then
        if v.Parent:IsA("Model") then
            startesp(v, "Loot")
        end
    end
end
workspace.DescendantAdded:Connect(function(v)
    if v and v.Parent and v:IsA("BasePart") and v.Name == "Head" then
        local hum = v.Parent:WaitForChild("Humanoid", 2)
        if hum and v.Parent ~= localplayer.Character then
            if game.Players:FindFirstChild(v.Parent.Name) and not v:FindFirstAncestor("DroppedItems") then
                startesp(v.Parent, "Plr")
            elseif v:FindFirstAncestor("AiZones") then
                startesp(v.Parent, "Bot333")
            elseif v:FindFirstAncestor("DroppedItems") then
                startesp(v.Parent, "Dead333")
            end
        end
    elseif v.Parent == workspace:FindFirstChild("NoCollision"):FindFirstChild("ExitLocations") then
        startesp(v, "Extract")
    elseif v:FindFirstAncestor("Containers") and v:IsA("MeshPart") then
        if v.Parent:IsA("Model") then
            startesp(v, "Loot")
        end
    end
end)

--fullbright--

if worldvisualstoggle then
    pcall(function()
        local lighting = game:GetService("Lighting")
        lighting.Ambient = worldambient
        lighting.OutdoorAmbient = worldoutdoor
        lighting.Brightness = 1
        lighting.FogEnd = 100000
        lighting.GlobalShadows = false
        
        for _, v in pairs(lighting:GetDescendants()) do
            if v:IsA("Atmosphere") then
                v:Destroy()
            end
        end
        
        for _, v in pairs(lighting:GetDescendants()) do
            if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("SunRaysEffect") then
                v.Enabled = false
            end
        end
        
        lighting.Changed:Connect(function()
            lighting.Ambient = worldambient
            lighting.Brightness = 1
            lighting.FogEnd = 100000
            lighting.OutdoorAmbient = worldoutdoor
            lighting.ClockTime = worldclock
            
            for _, v in pairs(lighting:GetChildren()) do
                if v:IsA("Atmosphere") then
                    v:Destroy()
                end
            end
        end)
        
        spawn(function()
            local character = localplayer.Character
            while wait(0.1) do
                repeat wait(0.1) until character ~= nil
                if not character.HumanoidRootPart:FindFirstChildWhichIsA("PointLight") then
                    local headlight = Instance.new("PointLight", character.HumanoidRootPart)
                    headlight.Brightness = 1
                    headlight.Range = 60
                end
            end
        end)
    end)
end


--inventory checker--

local function inventoryCheckerFrame()
	local BackgroundColor = Color3.fromRGB(30, 30, 30)
	local BorderColor = Color3.fromRGB(255, 255, 255)
	local TextColor = Color3.fromRGB(255, 255, 255)

	local MainFrame = sg:FindFirstChild("InventoryCheckerFrame") or Instance.new("Frame", sg)
	MainFrame.Name = "InventoryCheckerFrame"
	MainFrame.BackgroundColor3 = BackgroundColor
	MainFrame.BackgroundTransparency = 1
	MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	MainFrame.BorderColor3 = BorderColor
	MainFrame.BorderSizePixel = 1
	MainFrame.Position = UDim2.fromScale(0.5, 0.15)
	MainFrame.Size = UDim2.fromScale(0.575, 0.18)

	local GridHolder = Instance.new("Frame", MainFrame)
	GridHolder.Name = "GridHolder"
	GridHolder.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
	GridHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
	GridHolder.BorderSizePixel = 0
	GridHolder.Position = UDim2.new(0, 0, 0.314, 0)
	GridHolder.Size = UDim2.new(1, 0, 0.5, 0)

	local UICornerGridHolder = Instance.new("UICorner", GridHolder)
	UICornerGridHolder.CornerRadius = UDim.new(0, 0.5)

	local StrokeGridHolder = Instance.new("UIStroke", GridHolder)
	StrokeGridHolder.Thickness = 2
	StrokeGridHolder.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	StrokeGridHolder.Color = Color3.fromRGB(255, 255, 255)
	local GridHolderGradient = Instance.new("UIGradient", StrokeGridHolder)
	GridHolderGradient.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 145, 255)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 86, 161))
	}
	
	local GridHolderElement = Instance.new("UIGridLayout", GridHolder)
	GridHolderElement.Name = "GridHolderElement"
	GridHolderElement.SortOrder = Enum.SortOrder.LayoutOrder
	GridHolderElement.CellPadding = UDim2.new(0, 7, 0, 7)
	GridHolderElement.CellSize = UDim2.new(0, 51, 0, 51)

	local NameFrame = Instance.new("Frame", MainFrame)
	NameFrame.Name = "NameFrame"
	NameFrame.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
	NameFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	NameFrame.BorderSizePixel = 0
	NameFrame.Position = UDim2.new(0, 0, 0, 0)
	NameFrame.Size = UDim2.new(1, 0, 0.25, 0)

	local UICornerNameFrame = Instance.new("UICorner", NameFrame)
	UICornerNameFrame.CornerRadius = UDim.new(0, 0.5)

	local StrokeNameFrame = Instance.new("UIStroke", NameFrame)
	StrokeNameFrame.Thickness = 2
	StrokeNameFrame.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	StrokeNameFrame.Color = Color3.fromRGB(255, 255, 255)
	local NameFrameGradient = Instance.new("UIGradient", StrokeNameFrame)
	NameFrameGradient.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 145, 255)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 86, 161))
	}

	local TextLabel = Instance.new("TextLabel", NameFrame)
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.0
	TextLabel.Position = UDim2.new(0, 0, 0.169, 0)
	TextLabel.Size = UDim2.new(1, 0, 0.5, 0)
	TextLabel.Font = Enum.Font.Ubuntu
	TextLabel.Text = "N/A"
	TextLabel.TextColor3 = TextColor
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14
	TextLabel.TextStrokeTransparency = 0.7
	TextLabel.TextWrapped = true

	local TextLabelGradient = Instance.new("UIGradient", TextLabel)
	TextLabelGradient.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 145, 255)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 86, 161))
	}

	local FooterLabel = Instance.new("TextLabel", MainFrame)
	FooterLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	FooterLabel.BackgroundTransparency = 1.0
	FooterLabel.Position = UDim2.new(0, 0, 1.046, 0)
	FooterLabel.Size = UDim2.new(0, 178, 0, 17)
	FooterLabel.Font = Enum.Font.Ubuntu
	FooterLabel.Text = "Exothium.xyz"
	FooterLabel.TextColor3 = TextColor
	FooterLabel.TextSize = 14
	FooterLabel.TextStrokeTransparency = 0.7
	FooterLabel.TextXAlignment = Enum.TextXAlignment.Left

	local FooterLabelGradient = Instance.new("UIGradient", FooterLabel)
	FooterLabelGradient.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 145, 255)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 86, 161))
	}

	if not table.find(createdThings, MainFrame) then
		table.insert(createdThings, MainFrame)
	end

	return MainFrame, GridHolder, TextLabel
end

local Debounce = false
local closestDistance = math.huge
local closestPlayerTemp

local MainFrame, GridHolder, TextLabel

local function inventoryChecker()
    MainFrame, GridHolder, TextLabel = inventoryCheckerFrame()

    while inventoryCheckerToggle do
        task.wait()
        closestDistance = math.huge
        closestPlayerTemp = nil

        for _, player in ipairs(game.Players:GetPlayers()) do
            if player ~= localplayer and player.Character and player.Character.PrimaryPart then
                local part = player.Character.PrimaryPart
                local vector, onscreen = wcamera:WorldToScreenPoint(part.Position)
                local screenpoint = Vector2.new(vector.X, vector.Y)
                local mousePos = Vector2.new(mouse.X, mouse.Y)
                local distance = (screenpoint - mousePos).Magnitude

                if onscreen and distance < aimfov and distance < closestDistance then
                    closestDistance = distance
                    closestPlayerTemp = player
                end
            end
        end

        if closestPlayerTemp then
            if not Debounce then
                MainFrame.Visible = true
                Debounce = true

                if rp:FindFirstChild("Players") and rp.Players:FindFirstChild(closestPlayerTemp.Name) then
                    for _, f in ipairs(rp.Players[closestPlayerTemp.Name]:GetChildren()) do
                        if f:IsA("Folder") and f.Name ~= "Vault" then
                            for i, v in ipairs(f:GetChildren()) do
                                if v:FindFirstChild("ItemProperties") and v.ItemProperties:FindFirstChild("ItemIcon") and not GridHolder:FindFirstChild(v.Name .. i) then
                                    local imgLabel = Instance.new("ImageLabel", GridHolder)
                                    imgLabel.Name = v.Name .. i
                                    imgLabel.BackgroundTransparency = 1
                                    imgLabel.Image = v.ItemProperties.ItemIcon.Image
                                    TextLabel.Text = closestPlayerTemp.Name
                                end
                            end
                        end
                    end
                end
            end
        else
            MainFrame.Visible = false
            Debounce = false

            for _, img in pairs(GridHolder:GetChildren()) do
                if img:IsA("ImageLabel") then
                    img:Destroy()
                end
            end
        end
    end
end

local function onInventoryCheckerPressed(input)
    if input.KeyCode == inventoryCheckerBind then
        inventoryChecker()
    end
end

local function onInventoryCheckerReleased(input)
    if input.KeyCode == inventoryCheckerBind then
        MainFrame.Visible = false
    end
end

uis.InputBegan:Connect(onInventoryCheckerPressed)
uis.InputEnded:Connect(onInventoryCheckerReleased)

-- whisper notifications
if whisperZone then
whisperZone.DescendantAdded:Connect(function(descendant)
    if whisperNotificationToggle then
        Notify("Exothium.xyz", "Whisper has spawned", 5)
    end
end)

whisperZone.DescendantRemoving:Connect(function(descendant)
    if whisperNotificationToggle then
        Notify("Exothium.xyz", "Whisper has despawned", 5)
    end
end)
end

-- anti aim

function FlipBack()
    local characterxx = localplayer.Character or localplayer.CharacterAdded:Wait()
    local humanoidRootPart = characterxx:WaitForChild("HumanoidRootPart")
    local rootCFrame = humanoidRootPart.CFrame
    local position = rootCFrame.Position
    local forcedRotation = CFrame.Angles(math.rad(0), 0, 0)
    
    localplayer.Character.Humanoid.PlatformStand = true
    humanoidRootPart.CFrame = CFrame.new(position) * forcedRotation
end

-- ping

for i = 10, 1000, 10 do
    selftrack_data[i] = localplayer.Character.Head.Position
end
local function updateselfpos()
    for time = 990, 10, -10 do
        selftrack_data[time + 10] = selftrack_data[time]
    end
    selftrack_data[10] = localplayer.Character.Head.Position
end

--fly--

local function fly_move(dir)
    local hrp = localplayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

	local newPos = hrp.CFrame + (dir * 1)
	hrp.CFrame = newPos
end
local function fly_getclosestpoint()
    local hrp = localplayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

	local dirs = {
        Vector3.new(1, 0, 0),
        Vector3.new(-1, 0, 0),
        Vector3.new(0, 1, 0),
        Vector3.new(0, -1, 0),
        Vector3.new(0, 0, 1),
        Vector3.new(0, 0, -1),
        Vector3.new(1, 1, 0),
        Vector3.new(1, -1, 0),
        Vector3.new(-1, 1, 0),
        Vector3.new(-1, -1, 0),
        Vector3.new(1, 0, 1),
        Vector3.new(1, 0, -1),
        Vector3.new(-1, 0, 1),
        Vector3.new(-1, 0, -1),
        Vector3.new(0, 1, 1),
        Vector3.new(0, 1, -1),
        Vector3.new(0, -1, 1),
        Vector3.new(0, -1, -1),
        Vector3.new(1, 1, 1),
        Vector3.new(1, 1, -1),
        Vector3.new(1, -1, 1),
        Vector3.new(1, -1, -1),
        Vector3.new(-1, 1, 1),
        Vector3.new(-1, 1, -1),
        Vector3.new(-1, -1, 1),
        Vector3.new(-1, -1, -1)
    }

	local fcp = nil
	local cd = math.huge

    local playerslist = game.Players:GetPlayers()
    local ignorl = {localplayer.Character, wcamera}

    for _, player in ipairs(playerslist) do
        if player.Character then
            table.insert(ignorl, player.Character)
        end
    end

	for _, dir in ipairs(dirs) do
		local ray = Ray.new(hrp.Position, dir * 200)
		local part, pos = workspace:FindPartOnRayWithIgnoreList(ray, ignorl)
		if part and pos then
			local d = (hrp.Position - pos).Magnitude
			if d < cd then
				cd = d
				fcp = pos
			end
		end
	end

	return fcp
end
function fly_getoffset(dir)
	local offset = Vector3.new(0.1, 0.1, 0.1)
	if dir.X > 0 then
		offset = Vector3.new(0.1, 0, 0)
	elseif dir.X < 0 then
		offset = Vector3.new(-0.1, 0, 0)
	elseif dir.Y > 0 then
		offset = Vector3.new(0, 0.1, 0)
	elseif dir.Y < 0 then
		offset = Vector3.new(0, -0.1, 0)
	elseif dir.Z > 0 then
		offset = Vector3.new(0, 0, 0.1)
	elseif dir.Z < 0 then
		offset = Vector3.new(0, 0, -0.1)
	end
	return offset
end

-- admin detector --

local function CheckAdminStatus(player)
    local replicatedPlayers = rp:FindFirstChild("Players")
    if replicatedPlayers then
        local playerData = replicatedPlayers:FindFirstChild(player.Name)
        if playerData then
            local status = playerData:FindFirstChild("Status")
            if status then
                local UAC = status:FindFirstChild("UAC")
                if UAC then
                    return UAC:GetAttribute("A1Detected") or UAC:GetAttribute("A2Detected")
                end
            end
        end
    end
    return false
end

task.spawn(function()
    while true do
        for _, player in ipairs(Players:GetPlayers()) do
            local isAdmin = CheckAdminStatus(player)
            if isAdmin and not detectedAdmins[player.Name] then
                detectedAdmins[player.Name] = true
                print("[EXOTHIUM.XYZ] Admin joined:" .. player.Name)
                Notify(
                    "Exothium.xyz",
                    "Admin detected: " .. player.Name,
                    5,
                    5,
                    Color3.fromRGB(77, 210, 255),
                    Color3.fromRGB(66, 180, 245),
                    Color3.fromRGB(66, 180, 245),
                    Color3.fromRGB(55, 170, 235),
                    Color3.fromRGB(3, 3, 3),
                    Color3.fromRGB(77, 210, 255)
                )
            elseif not isAdmin and detectedAdmins[player.Name] then
                detectedAdmins[player.Name] = nil
            end
        end
        task.wait(1)
    end
end)

Players.PlayerAdded:Connect(function(player)
    task.delay(1, function()
        if CheckAdminStatus(player) then
            print("[EXOTHIUM.XYZ] Admin joined:" .. player.Name)
            Notify(
                "Exothium.xyz",
                "Admin detected: " .. player.Name,
                5,
                5,
                    Color3.fromRGB(77, 210, 255),
                    Color3.fromRGB(66, 180, 245),
                    Color3.fromRGB(66, 180, 245),
                    Color3.fromRGB(55, 170, 235),
                    Color3.fromRGB(3, 3, 3),
                    Color3.fromRGB(77, 210, 255)
            )
            detectedAdmins[player.Name] = true
        end
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    if detectedAdmins[player.Name] then
    print("[EXOTHIUM.XYZ] Admin left:" .. player.Name)
        Notify(
            "Exothium.xyz",
            "Admin left: " .. player.Name,
            5,
            10,
                    Color3.fromRGB(77, 210, 255),
                    Color3.fromRGB(66, 180, 245),
                    Color3.fromRGB(66, 180, 245),
                    Color3.fromRGB(55, 170, 235),
                    Color3.fromRGB(3, 3, 3),
                    Color3.fromRGB(77, 210, 255)
        )
        detectedAdmins[player.Name] = nil
    end
end)

--global cycle--

task.spawn(function() -- very slow
    while wait(10.5) do
        table.clear(aimignoreparts)
        for i,v in ipairs(workspace:GetDescendants()) do
            if v:GetAttribute("PassThrough") then
                table.insert(aimignoreparts, v)
            end
        end
    end
end)

task.spawn(function() -- slow
    while wait(1) do

        if keybindmenuvisible then
            KeybindListMenuD["__238237458342578523124872147"].Enabled = true
        elseif keybindmenuvisible == false then
            KeybindListMenuD["__238237458342578523124872147"].Enabled = false
        end

        local function handleFoliage()
            if workspace:FindFirstChild("SpawnerZones") then
                for i, v in ipairs(workspace.SpawnerZones.Foliage:GetDescendants()) do
                    if v:FindFirstChildOfClass("SurfaceAppearance") then
                        if worldleaves then
                            v.Transparency = 1
                        else
                            v.Transparency = 0
                        end
                    end
                end
            end
        end

        local function handleInventory()
            local x, y, z = viewmodX, viewmodY, viewmodZ
            local offset = CFrame.new(Vector3.new(tonumber(x), tonumber(y), tonumber(z)))
            if not offset then return end
            local inv = game.ReplicatedStorage.Players:FindFirstChild(localplayer.Name).Inventory
            if not inv then return end
            for i, v in ipairs(inv:GetChildren()) do
                local sett = require(v.SettingsModule)
                sett.weaponOffSet = offset
                if RapidFire then
                    sett.FireRate = 0.002
                end
                if UnlockFiremodes then
                    sett.FireModes = {"Auto", "Semi"}
                end
            end
        end

        local function handleViewModelHighlight()
            if viewmodhighlightchams and wcamera:FindFirstChild("ViewModel") then
                local vmhighlight = Instance.new("Highlight")
                vmhighlight.Parent = wcamera:FindFirstChild("ViewModel")
                vmhighlight.DepthMode = Enum.HighlightDepthMode.Occluded

                vmhighlight.FillColor = viewmodhighlightfillcolor
                vmhighlight.OutlineColor = viewmodhighlightoutlinecolor

                vmhighlight.FillTransparency = viewmodhighlightfilltransparency
                vmhighlight.OutlineTransparency = viewmodhighlightoutlinetransparency
            elseif viewmodhighlightchams == false and wcamera:FindFirstChild("ViewModel") and wcamera:FindFirstChild("ViewModel"):FindFirstAncestorWhichIsA("Highlight") then
                local temporaryhighlight = wcamera:FindFirstChild("ViewModel"):FindFirstChildWhichIsA("Highlight")
                temporaryhighlight:Destroy()
            end
        end

        local function handleViewModel()
            if viewmodbool and wcamera:FindFirstChild("ViewModel") then
                for _, obj in ipairs(wcamera.ViewModel:GetDescendants()) do
                    if obj:IsA("BasePart") then
                        if not obj:FindFirstAncestor("Item") then
                            local mb = obj:FindFirstChildOfClass("SurfaceAppearance")
                            if mb then
                                mb:Destroy()
                            end

                            obj.Color = viewmodhandcolor
                            obj.Material = viewmodhandmat
                        else
                            local mb = obj:FindFirstChildOfClass("SurfaceAppearance")
                            if mb then
                                mb:Destroy()
                            end

                            obj.Color = viewmodguncolor
                            obj.Material = viewmodgunmat
                        end
                    elseif obj:IsA("Model") and obj:FindFirstChild("LL") then
                        obj:Destroy()
                    end
                end
            end
        end

        handleFoliage()
        handleInventory()
        handleViewModel()
        handleViewModelHighlight()
    end
end)

runs.RenderStepped:Connect(function(delta) --  fast
    runs.RenderStepped:Wait()

            local function handleClientAntiCheatBypass()
            if not localplayer.Character or not localplayer.Character:FindFirstChild("HumanoidRootPart") or not localplayer.Character:FindFirstChild("Humanoid") then
                while not localplayer.Character or not localplayer.Character:FindFirstChild("HumanoidRootPart") or not localplayer.Character:FindFirstChild("Humanoid") do
                    wait(0.1)
                end
            end

            local somemethods = {
                "WalkSpeed",
                "JumpHeight",
                "HipHeight"
            }
            for _,met in somemethods do
                for i,v in getconnections(game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal(met)) do
                    v:Disable()
                end
            end
            for i,v in getconnections(game.Players.LocalPlayer.Character.HumanoidRootPart.ChildAdded) do
                v:Disable()
            end
            for i,v in getconnections(game.Players.LocalPlayer.Character.ChildRemoved) do
                v:Disable()
            end
            for i,v in getconnections(workspace:GetPropertyChangedSignal("Gravity")) do
                v:Disable()
            end
        end

        handleClientAntiCheatBypass()
        bindupdate()

    if charsemifly == false and localplayer.Character.Humanoid.PlatformStand == true then
        --print("Line 2189 - Toggled platformstand to false \\ charsemifly == false, localplayer.Character.Humanoid.PlatformStand == true")
        localplayer.Character.Humanoid.PlatformStand = false
    end
--[[
    if hitsounds_enabled and currenthitsound ~= "" then
        hitMarkers.BodyArmor.SoundId = currenthitsound
        hitMarkers.Bodyshot.SoundId = currenthitsound
        hitMarkers.Headshot.SoundId = currenthitsound
        hitMarkers.Helmet.SoundId = currenthitsound
        hitMarkers.Kill.SoundId = currenthitsound
    else
        hitMarkers.BodyArmor.SoundId = originalSounds.BodyArmor
        hitMarkers.Bodyshot.SoundId = originalSounds.Bodyshot
        hitMarkers.Headshot.SoundId = originalSounds.Headshot
        hitMarkers.Helmet.SoundId = originalSounds.Helmet
        hitMarkers.Kill.SoundId = originalSounds.Kill
    end
]]

    if charsemifly and charantiaim_underground then
        flipback = true
    elseif charsemifly == false and charantiaim_underground and flipback then
        localplayer.Character.Humanoid.PlatformStand = true
        FlipBack()
        localplayer.Character.Humanoid.PlatformStand = true
        flipback = false
    end

    local function flipCharacterUpsideDown()
        local characterxx = localplayer.Character or localplayer.CharacterAdded:Wait()
        local humanoidRootPart = characterxx:WaitForChild("HumanoidRootPart")
        local rootCFrame = humanoidRootPart.CFrame
        local position = rootCFrame.Position
        local forcedRotation = CFrame.Angles(math.rad(xrot), yrot, zrot)

        humanoidRootPart.CFrame = CFrame.new(position) * forcedRotation
    end

    local bodyparts = {
        "FaceHitBox",
        "Head",
        "HeadTopHitBox",
        "LeftFoot",
        "LeftHand",
        "LeftLowerArm",
        "LeftLowerLeg",
        "LeftUpperArm",
        "LowerTorso",
        "RightFoot",
        "RightLowerArm",
        "RightUpperArm"
    }

    local character = localplayer.Character or localplayer.CharacterAdded:Wait()
    local originalCollisions = {}

    local function enableNoclip(character)
        for _, partName in pairs(bodyparts) do
            local part = character:FindFirstChild(partName)
            if part then
                originalCollisions[partName] = part.CanCollide
                part.CanCollide = false
            end
        end
    end

    local function disableNoclip(character)
        for _, partName in pairs(bodyparts) do
            local part = character:FindFirstChild(partName)
            if part and originalCollisions[partName] ~= nil then
                part.CanCollide = originalCollisions[partName]
            end
        end
    end

    if charsemifly and charantiaim_underground then
        flipCharacterUpsideDown()
        enableNoclip(character)
    else
        disableNoclip(character)
    end

    if upangletoggle then
        game:GetService("ReplicatedStorage").Remotes.UpdateTilt:FireServer(upangleY)
    end

    if charsemifly and localplayer.Character then --semifly
        local hrp = localplayer.Character:FindFirstChild("HumanoidRootPart")
        if not hrp then return end
        local dir = Vector3.new(0, 0, 0)
        

		if uis:IsKeyDown(Enum.KeyCode.W) then
			dir += wcamera.CFrame.LookVector
		elseif uis:IsKeyDown(Enum.KeyCode.S) then
			dir -= wcamera.CFrame.LookVector
		end

		if uis:IsKeyDown(Enum.KeyCode.A) then
			dir -= wcamera.CFrame.RightVector
		elseif uis:IsKeyDown(Enum.KeyCode.D) then
			dir += wcamera.CFrame.RightVector
		end

		if uis:IsKeyDown(Enum.KeyCode.Space) then
			dir += Vector3.new(0, 1, 0)
		elseif uis:IsKeyDown(Enum.KeyCode.LeftShift) then
			dir -= Vector3.new(0, 1, 0)
		end

		local closest = fly_getclosestpoint()
		if closest then
			local d = (hrp.Position - closest).Magnitude
			if d > charsemiflydist then
				local ldir = (hrp.Position - closest).Unit * charsemiflydist
				local offset = fly_getoffset(ldir)
				hrp.CFrame = CFrame.new(closest + ldir - offset)
			else
				fly_move(dir * charsemiflyspeed * runs.RenderStepped:Wait())
			end
		else
			fly_move(dir * charsemiflyspeed * runs.RenderStepped:Wait())
		end
    end

    if changerbool and localplayer.Character ~= nil then -- humanoid changer
        localplayer.Character.Humanoid.WalkSpeed = changerspeed
        localplayer.Character.Humanoid.JumpHeight = changerjump
        localplayer.Character.Humanoid.HipHeight = changerheight
        workspace.Gravity = changergrav
    end

if aimtarget ~= nil then
    local displayText = "[[ " .. aimtarget.Name

    local botNames = {
        "Death",
        "Whisper",
        "Anton",
        "AntonGuard",
        "Dozer",
        "OccupantSniper",
        "SniperBandit",
        "OccupantSoldier",
        "OccupantSurveyTeam",
        "WastelandBandit",
        "HighwayBandit"
    }

    local isBot = false
    for _, botName in ipairs(botNames) do
        if aimtarget.Name == botName then
            isBot = true
            break
        end
    end

    local isAdmin = false
    if not isBot then
        local player = game:GetService("ReplicatedStorage").Players:FindFirstChild(aimtarget.Name)
        if player and player:FindFirstChild("Status") then
            local status = player.Status.UAC
            isAdmin = (status:GetAttribute("A1Detected") == true) or (status:GetAttribute("A2Detected") == true)
        end
    end

    if healthtargetname and not isBot and aimtarget.Character and aimtarget.Character:FindFirstChild("Humanoid") then
        displayText = displayText .. " | HP: " .. aimtarget.Character.Humanoid.Health
    end

    if admintargetname and not isBot then
        displayText = displayText .. " | Admin: " .. tostring(isAdmin)
    end

    displayText = displayText .. " ]]"
    aimtargetname.Text = displayText
else
    aimtargetname.Text = " "
end

    aimtargetname.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2 + aimfov + 20) 
    aimfovcircle.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2)
--[[
if aimtarget ~= nil then

    

    local character = aimtarget.Character
    local humanoid = character and character:FindFirstChildOfClass("Humanoid")
    
    if humanoid then
        local health = humanoid.Health
        local camera = workspace.CurrentCamera
        local screenPos, onScreen = camera:WorldToScreenPoint(character.PrimaryPart.Position)

        aimtargetname.Text = string.format(
            " %s | Health: %d ",
            aimtarget.Name, math.floor(health)
        )

        aimtargetname.Position = Vector2.new(screenPos.X, screenPos.Y)
    else
        aimtargetname.Text = " ".. aimtarget.Name .." | Health: N/A "
    end
else
    aimtargetname.Text = " "
end
]]

--[[
    if aimtarget ~= nil then --on screen stuff
        aimtargetname.Text = " ".. aimtarget.Name .." "
    else
        aimtargetname.Text = " "
    end
    ]]
    crosshair.Position = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2)

    if aimdynamicfov then
        aimfovcircle.Radius = aimfov * (90 / wcamera.FieldOfView )
    else
        aimfovcircle.Radius = aimfov
    end

    selftrack_update += delta
    if selftrack_update >= 0.01 then
        updateselfpos(selftrack_update)
        selftrack_update = 0
    end

    if aimtrigger and aimtarget ~= nil then
        if not uis.MouseIconEnabled then
            task.spawn(function()
                mouse1press()
                wait()
                mouse1release()
            end)
        end
    end

    choosetarget() -- aim part

    if snaplinebool and aimtargetpart then
        aimsnapline.Visible = true
        local headpos = wcamera:WorldToViewportPoint(aimtargetpart.Position)
        aimsnapline.From = Vector2.new(wcamera.ViewportSize.X / 2, wcamera.ViewportSize.Y / 2)
        aimsnapline.To = Vector2.new(headpos.X, headpos.Y)
    else
        aimsnapline.Visible = false
    end

    for dobj, info in esptable do --esp part
        local dtype = info.type
        local otype = info.otype
        
        if info.primary == nil or info.primary.Parent == nil then
            esptable[dobj] = nil
            if dtype == "Highlight" then
                dobj.Enabled = false
                dobj:Destroy()
            else
                dobj.Visible = false
                dobj:Remove()
            end
            continue
        end

        local obj
        local isHumanoid
        if otype == "Extract" then
            obj = info.primary
            isHumanoid = true
        elseif otype == "Loot" then
            obj = info.primary
            isHumanoid = true
        else
            obj = info.primary.Parent:FindFirstChild("UpperTorso")
            if not obj then
                esptable[dobj] = nil
                if dtype == "Highlight" then
                    dobj.Enabled = false
                    dobj:Destroy()
                else
                    dobj.Visible = false
                    dobj:Remove()
                end
                continue
            end
            isHumanoid = obj.Parent:FindFirstChild("Humanoid")
        end

        if (otype == "Bot333" and espbots == false) or (otype == "Dead333" and espdead == false) or (otype == "Extract" and espexit == false) or (otype == "Loot" and esploot == false) then
            if dtype == "Highlight" then
                dobj.Enabled = false
            else
                dobj.Visible = false
            end
            continue
        end

        if localplayer.Character == nil or localplayer.Character.PrimaryPart == nil then
            if dtype == "Highlight" then
                dobj.Enabled = false
            else
                dobj.Visible = false
            end
            continue
        end
        
        if otype == "Bot333" and obj.Parent.Humanoid.Health == 0 then
            info.otype = "Dead333"
        end

        local metersdist = math.floor((localplayer.Character.PrimaryPart.Position - obj.Position).Magnitude * 0.333)

        if espbool and isonscreen(obj) and isHumanoid and metersdist < esprenderdist then
            local headpos = wcamera:WorldToViewportPoint(obj.Position)
            local resultpos = Vector2.new(headpos.X, headpos.Y)
    
            if dtype == "Name" then
                if espname then
                    resultpos = resultpos - Vector2.new(0, 15)
                    if otype == "Extract" then
                        dobj.Text = obj.Name
                    else
                        dobj.Text = obj.Parent.Name
                    end
                    dobj.Position = resultpos
                    dobj.Size = esptextsize
                    dobj.Color = esptextcolor
                    dobj.Outline = esptextline
                    dobj.Visible = true
                else
                    dobj.Visible = false
                end
            elseif dtype == "HP" then

                if otype == "Dead333" then
                    dobj.Visible = false
                    continue
                end

                resultpos = resultpos - Vector2.new(0, 30)
                dobj.Text = math.floor(obj.Parent.Humanoid.Health) .. "HP"
                dobj.Position = resultpos
                dobj.Size = esptextsize
                dobj.Color = esptextcolor
                dobj.Visible = esphp
                dobj.Outline = esptextline
            elseif dtype == "Distance" then
                if espdistance then
                    resultpos = resultpos - Vector2.new(0, 45)
                    dobj.Text = metersdist .. "m"
                    dobj.Position = resultpos
                    dobj.Size = esptextsize
                    dobj.Color = esptextcolor
                    dobj.Outline = esptextline
                    dobj.Visible = true
                else
                    dobj.Visible = false
                end
            elseif dtype == "Hotbar" then

                if otype == "Dead333" then
                    dobj.Visible = false
                    continue
                end

                resultpos = resultpos + Vector2.new(0, 15)
                local hotgun = "None"
                for _, v in ipairs(obj.Parent:GetChildren()) do
                    if v:FindFirstChild("ItemRoot") then
                        hotgun = v.Name
                        break
                    end
                end

                dobj.Visible = esphotbar
                if otype == "Loot" then
                    local Amount
                    local TotalPrice = 0
                    local Value = 0

                    for _, h in ipairs(obj.Parent.Inventory:GetChildren()) do
                        Amount = h.ItemProperties:GetAttribute("Amount") or 1
                        TotalPrice += h.ItemProperties:GetAttribute("Price") or 0
                        Value += (valcache[h.ItemProperties:GetAttribute("CallSign")] or 0) * Amount
                    end

                    if Value >= 20 then
                        dobj.Text = "Loot: $$$$ / " .. TotalPrice .. "$"
                    elseif Value >= 12 then
                        dobj.Text = "Loot: $$$ / " .. TotalPrice .. "$"
                    elseif Value >= 8 then
                        dobj.Text = "Loot: $$ / " .. TotalPrice .. "$"
                    elseif Value >= 4 then
                        dobj.Text = "Loot: $ / " .. TotalPrice .. "$"
                    end
                else
                    dobj.Text = hotgun
                end
                dobj.Position = resultpos
                dobj.Size = esptextsize
                dobj.Outline = esptextline
                dobj.Color = esptextcolor
            elseif dtype == "Highlight" then

                if otype == "Dead333" then
                    esptable[dobj] = nil
                    dobj.Enabled = false
                    dobj:Destroy()
                    continue
                end

                if obj.Parent == nil or not obj.Parent:IsA("Model") then
                    esptable[dobj] = nil
                    dobj.Enabled = false
                    dobj:Destroy()
                    continue
                end

                dobj.FillColor = espfillcolor
                dobj.OutlineColor = esplinecolor
                dobj.FillTransparency = espchamsfill
                dobj.OutlineTransparency = espchamsline
                dobj.Enabled = esphigh
            end
        else
            if dtype == "Highlight" then
                dobj.Enabled = false
            else
                dobj.Visible = false
            end
        end
    end
end)

Notify("Exothium.xyz", "Loaded script", 2.1)
Notify("Exothium.xyz", "Press Insert to toggle the menu", 3.5)

game.CoreGui.ewq9erdusafeuwufijnen329duewq_1.Enabled = true
